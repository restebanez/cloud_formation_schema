{
    "AWS::AutoScaling::AutoScalingGroup": {
        "AvailabilityZones": {
            "title": "AvailabilityZones",
            "description": "Contains a list of availability zones for the group.",
            "required": "Yes",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "Cooldown": {
            "title": "Cooldown",
            "description": "The number of seconds after a scaling activity is completed before any further scaling activities can start.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "DesiredCapacity": {
            "title": "DesiredCapacity",
            "description": "Specifies the desired capacity for the Auto Scaling group.",
            "description-extra": "If SpotPrice is not set in the AWS::AutoScaling::LaunchConfiguration for this Auto Scaling group, then Auto Scaling will begin to bring instances online based on DesiredCapacity. CloudFormation will not mark the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) until the desired capacity is reached.If SpotPrice is set, then DesiredCapacity will not be used as a criteria for success, since instances will only be started when the spot price has been matched. After the spot price has been matched, however, Auto Scaling uses DesiredCapacity as the target capacity for the group.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "HealthCheckGracePeriod": {
            "title": "HealthCheckGracePeriod",
            "description": "The length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "HealthCheckType": {
            "title": "HealthCheckType",
            "description": "The service you want the health status from, Amazon EC2 or Elastic Load Balancer. Valid values are EC2 or ELB.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "InstanceId": {
            "title": "InstanceId",
            "description": "The ID of the Amazon EC2 instance you want to use to create the Auto Scaling group. Use this property if you want to create an Auto Scaling group that uses an existing Amazon EC2 instance instead of a launch configuration.",
            "description-extra": "When you use an Amazon EC2 instance to create an Auto Scaling group, a new launch configuration is first created and then associated with the Auto Scaling group. The new launch configuration derives all its properties from the instance, with the exception of BlockDeviceMapping and AssociatePublicIpAddress.",
            "required": "Conditional. You must specify this property if you don't specify the LaunchConfigurationName property.",
            "type": "String",
            "update requires": "Replacement"
        },
        "LaunchConfigurationName": {
            "title": "LaunchConfigurationName",
            "description": "Specifies the name of the associated AWS::AutoScaling::LaunchConfiguration.",
            "description-note": "NoteIf this resource has a public IP address and is also in a VPC that is defined in the same template, you must use theDependsOn attribute to declare a dependency on the VPC-gateway attachment. For more information,see DependsOn Attribute.",
            "required": "Conditional; you must specify this property if you don't specify the InstanceId property.",
            "type": "String",
            "update requires": "No interruption",
            "update-note": "ImportantWhen you update the LaunchConfigurationName, existing Amazon EC2 instances continue to run with the configuration that they were originally launched with. To update existing instances, specify an update policy attribute for this Auto Scaling group. For more information, see UpdatePolicy."
        },
        "LoadBalancerNames": {
            "title": "LoadBalancerNames",
            "description": "A list of load balancers associated with this Auto Scaling group.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "Replacement",
            "update-note": "Important When you update LoadBalancerNames, the entire Auto Scaling group is replaced. "
        },
        "MaxSize": {
            "title": "MaxSize",
            "description": "The maximum size of the Auto Scaling group.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "MetricsCollection": {
            "title": "MetricsCollection",
            "description": "Enables the monitoring of group metrics of an Auto Scaling group.",
            "required": "No",
            "type": "A list of Auto Scaling MetricsCollection",
            "update requires": "No interruption"
        },
        "MinSize": {
            "title": "MinSize",
            "description": "The minimum size of the Auto Scaling group.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "NotificationConfiguration": {
            "title": "NotificationConfiguration",
            "description": "An embedded property that configures an Auto Scaling group to send notifications when specified events take place.",
            "required": "No",
            "type": "NotificationConfiguration",
            "update requires": "No interruption"
        },
        "PlacementGroup": {
            "title": "PlacementGroup",
            "description": "The name of an existing cluster placement group into which you want to launch your instances. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Tags": {
            "title": "Tags",
            "description": "The tags you want to attach to this resource.",
            "description-extra": "For more information about tags, go to Tagging Auto Scaling Groups and Amazon EC2 Instances in the Auto Scaling Developer Guide.",
            "required": "No",
            "type": "List of Auto Scaling Tags",
            "update requires": "No interruption"
        },
        "TerminationPolicies": {
            "title": "TerminationPolicies",
            "description": "A policy or a list of policies that are used to select the instances to terminate. The policies are executed in the order that you list them.",
            "description-extra": " For more information on configuring a termination policy for your Auto Scaling group, see Instance Termination Policy for Your Auto Scaling Group in the Auto Scaling Developer Guide. ",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "VPCZoneIdentifier": {
            "title": "VPCZoneIdentifier",
            "description": "A list of subnet identifiers of Amazon Virtual Private Cloud (Amazon VPCs).",
            "description-extra": "The subnets that you specify for VPCZoneIdentifier must reside in the Availability Zones that you specify with the AvailabilityZones parameter.For more information, go to Using EC2 Dedicated Instances Within Your VPC in the Auto Scaling Developer Guide.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "Some interruptions",
            "update-note": "NoteWhen you update VPCZoneIdentifier, the instances are replaced, but not the Auto Scaling group."
        }
    },
    "AWS::AutoScaling::LaunchConfiguration": {
        "AssociatePublicIpAddress": {
            "title": "AssociatePublicIpAddress",
            "description": "For Amazon EC2 instances in a VPC, indicates whether instances in the Auto Scaling group receive public IP addresses. If you specify true, each instance in the Auto Scaling receives a unique public IP address.",
            "description-note": "NoteIf this resource has a public IP address and is also in a VPC that is defined in the same template, you must use theDependsOn attribute to declare a dependency on the VPC-gateway attachment. For more information,see DependsOn Attribute.",
            "required": "No",
            "type": "Boolean",
            "update requires": "Replacement"
        },
        "BlockDeviceMappings": {
            "title": "BlockDeviceMappings",
            "description": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.",
            "required": "No",
            "type": "A list of BlockDeviceMappings.",
            "update requires": "Replacement"
        },
        "EbsOptimized": {
            "title": "EbsOptimized",
            "description": "Specifies whether the launch configuration is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance.",
            "description-extra": "Additional fees are incurred when using EBS-optimized instances. For more information about fees and supported instance types, see EBS-Optimized Instances in the Amazon Elastic Compute Cloud User Guide.",
            "required": "No If this property is not specified, \"false\" is used.",
            "type": "Boolean",
            "update requires": "Replacement"
        },
        "IamInstanceProfile": {
            "title": "IamInstanceProfile",
            "description": "Provides the name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.",
            "required": "No",
            "type": "String (1–1600 chars)",
            "update requires": "Replacement"
        },
        "ImageId": {
            "title": "ImageId",
            "description": "Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "InstanceId": {
            "title": "InstanceId",
            "description": "The ID of the Amazon EC2 instance you want to use to create the launch configuration. Use this property if you want the launch configuration to use settings from an existing Amazon EC2 instance.",
            "description-extra": "When you use an instance to create a launch configuration, all properties are derived from the instance with the exception of BlockDeviceMapping and AssociatePublicIpAddress. You can override any properties from the instance by specifying them in the launch configuration.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "InstanceMonitoring": {
            "title": "InstanceMonitoring",
            "description": "Indicates whether or not instance monitoring should be enabled for this autoscaling group. This is enabled by default. To turn it off, set InstanceMonitoring to \"false\".",
            "required": "No Default value is \"true\".",
            "type": "Boolean",
            "update requires": "Replacement"
        },
        "InstanceType": {
            "title": "InstanceType",
            "description": "Specifies the instance type of the EC2 instance.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "KernelId": {
            "title": "KernelId",
            "description": "Provides the ID of the kernel associated with the EC2 AMI.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "KeyName": {
            "title": "KeyName",
            "description": "Provides the name of the EC2 key pair.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "RamDiskId": {
            "title": "RamDiskId",
            "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "SecurityGroups": {
            "title": "SecurityGroups",
            "description": "A list that contains the EC2 security groups to assign to the Amazon EC2 instances in the Auto Scaling group. The list can contain the name of existing EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template. If your instances are launched within VPC, specify Amazon VPC security group IDs.",
            "required": "No",
            "type": "A list of EC2 security groups.",
            "update requires": "Replacement"
        },
        "SpotPrice": {
            "title": "SpotPrice",
            "description": "The spot price for this autoscaling group. If a spot price is set, then the autoscaling group will launch when the current spot price is less than the amount specified in the template.",
            "description-extra": "When you have specified a spot price for an auto scaling group, the group will only launch when the spot price has been met, regardless of the setting in the autoscaling group's DesiredCapacity.For more information about configuring a spot price for an autoscaling group, see Using Auto Scaling to Launch Spot Instances in the AutoScaling Developer Guide.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement",
            "update-note": "NoteWhen you change your bid price by creating a new launch configuration, running instances will continue to run as long as the bid price for those running instances is higher than the current Spot price."
        },
        "UserData": {
            "title": "UserData",
            "description": "The user data available to the launched EC2 instances.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::AutoScaling::ScalingPolicy": {
        "AdjustmentType": {
            "title": "AdjustmentType",
            "description": "Specifies whether the ScalingAdjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "AutoScalingGroupName": {
            "title": "AutoScalingGroupName",
            "description": "The name or Amazon Resource Name (ARN) of the Auto Scaling Group that you want to attach the policy to.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Cooldown": {
            "title": "Cooldown",
            "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "ScalingAdjustment": {
            "title": "ScalingAdjustment",
            "description": "The number of instances by which to scale. AdjustmentType determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::AutoScaling::ScheduledAction": {
        "AutoScalingGroupName": {
            "title": "AutoScalingGroupName",
            "description": "The name or ARN of the Auto Scaling group.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "DesiredCapacity": {
            "title": "DesiredCapacity",
            "description": "The number of Amazon EC2 instances that should be running in the Auto Scaling group.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "EndTime": {
            "title": "EndTime",
            "description": "The time in UTC for this schedule to end. For example, 2010-06-01T00:00:00Z.",
            "required": "No",
            "type": "Time stamp",
            "update requires": "No interruption"
        },
        "MaxSize": {
            "title": "MaxSize",
            "description": "The maximum number of Amazon EC2 instances in the Auto Scaling group.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "MinSize": {
            "title": "MinSize",
            "description": "The minimum number of Amazon EC2 instances in the Auto Scaling group.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "Recurrence": {
            "title": "Recurrence",
            "description": "The time in UTC when recurring future actions will start. You specify the start time by following the Unix cron syntax format. For more information about cron syntax, go to http://en.wikipedia.org/wiki/Cron.",
            "description-extra": "Specifying the StartTime and EndTime properties with Recurrence property forms the start and stop boundaries of the recurring action.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "StartTime": {
            "title": "StartTime",
            "description": "The time in UTC for this schedule to start. For example, 2010-06-01T00:00:00Z.",
            "required": "No",
            "type": "Time stamp",
            "update requires": "No interruption"
        }
    },
    "AWS::CloudFormation::Authentication": {
        "accessKeyId": {
            "title": "accessKeyId",
            "description": "Specifies the access key ID for S3 authentication.",
            "required": "Conditional Can be specified only if the type property is set to \"S3\".",
            "type": "String"
        },
        "buckets": {
            "title": "buckets",
            "description": "A comma-delimited list of Amazon S3 buckets to be associated with the S3 authentication credentials.",
            "required": "Conditional Can be specified only if the type property is set to \"S3\".",
            "type": "A list of strings"
        },
        "password": {
            "title": "password",
            "description": "Specifies the password for basic authentication.",
            "required": "Conditional Can be specified only if the type property is set to \"basic\".",
            "type": "String"
        },
        "secretKey": {
            "title": "secretKey",
            "description": "Specifies the secret key for S3 authentication.",
            "required": "Conditional Can be specified only if the type property is set to \"S3\".",
            "type": "String"
        },
        "type": {
            "title": "type",
            "description": "Specifies whether the authentication scheme uses a user name and password (\"basic\") or an access key ID and secret key (\"S3\").",
            "description-extra": "If you specify \"basic\", you must also specify the username, password, and uris properties.If you specify \"S3\", you must also specify the accessKeyId, secretKey, and buckets properties.",
            "required": "Yes",
            "type": "String Valid values are \"basic\" or \"S3\""
        },
        "uris": {
            "title": "uris",
            "description": "A comma-delimited list of URIs to be associated with the basic authentication credentials. The authorization applies to the specified URIs and any more specific URI. For example, if you specify http://www.example.com, the authorization will also apply to http://www.example.com/test.",
            "required": "Conditional Can be specified only if the type property is set to \"basic\".",
            "type": "A list of strings"
        },
        "username": {
            "title": "username",
            "description": "Specifies the user name for basic authentication.",
            "required": "Conditional Can be specified only if the type property is set to \"basic\".",
            "type": "String"
        },
        "roleName": {
            "title": "roleName",
            "description": "Describes the role for role-based authentication.",
            "required": "Conditional Can be specified only if the type property is set to \"S3\".",
            "type": "String."
        }
    },
    "AWS::CloudFormation::CustomResource": {
        "ServiceToken": {
            "title": "ServiceToken",
            "description": "The service token that was given to the template developer by the service provider to access the service, such as an Amazon SNS topic ARN or Lambda function ARN. The service token must be from the same region in which you are creating the stack.",
            "required": "Yes",
            "type": "String"
        }
    },
    "AWS::CloudFormation::Init": {},
    "AWS::CloudFormation::Stack": {
        "NotificationARNs": {
            "title": "NotificationARNs",
            "description": "A list of existing Amazon SNS topics where notifications about stack events are sent.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "Parameters": {
            "title": "Parameters",
            "description": "The set of parameters passed to AWS CloudFormation when this nested stack is created.",
            "description-note": "NoteIf you use the ref function to pass a parameter value to a nested stack, comma-delimited list parameters must be of type String. In other words, you cannot pass values that are of type CommaDelimitedList to nested stacks.",
            "required": "Conditional (required if the nested stack requires input parameters).",
            "type": "CloudFormation Stack Parameters Property Type",
            "update requires": "Whether an update causes interruptions depends on the resources that are being update. An update never causes a nested stack to be replaced."
        },
        "TemplateURL": {
            "title": "TemplateURL",
            "description": "The URL of a template that specifies the stack that you want to create as a resource. The template must be stored on an Amazon S3 bucket, so the URL must have the form: https://s3.amazonaws.com/.../TemplateName.template",
            "required": "Yes",
            "type": "String",
            "update requires": "Whether an update causes interruptions depends on the resources that are being update. An update never causes a nested stack to be replaced."
        },
        "TimeoutInMinutes": {
            "title": "TimeoutInMinutes",
            "description": "The length of time, in minutes, that AWS CloudFormation waits for the nested stack to reach the CREATE_COMPLETE state. The default is no timeout. When AWS CloudFormation detects that the nested stack has reached the CREATE_COMPLETE state, it marks the nested stack resource as CREATE_COMPLETE in the parent stack and resumes creating the parent stack. If the timeout period expires before the nested stack reaches CREATE_COMPLETE, AWS CloudFormation marks the nested stack as failed and rolls back both the nested stack and parent stack.",
            "required": "No",
            "type": "String",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::CloudFormation::WaitCondition": {
        "Count": {
            "title": "Count",
            "description": "The number of success signals that AWS CloudFormation must receive before it continues the stack creation process. When the wait condition receives the requisite number of success signals, AWS CloudFormation resumes the creation of the stack. If the wait condition does not receive the specified number of success signals before the Timeout period expires, AWS CloudFormation assumes that the wait condition has failed and rolls the stack back.",
            "required": "No",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Handle": {
            "title": "Handle",
            "description": "A reference to the wait condition handle used to signal this wait condition. Use the Ref intrinsic function to specify an AWS::CloudFormation::WaitConditionHandle resource.",
            "description-extra": "Anytime you add a WaitCondition resource during a stack update, you must associate the wait condition with a new WaitConditionHandle resource. Do not reuse an old wait condition handle that has already been defined in the template. If you reuse a wait condition handle, the wait condition might evaluate old signals from a previous create or update stack command.",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Timeout": {
            "title": "Timeout",
            "description": "The length of time (in seconds) to wait for the number of signals that the Count property specifies. Timeout is a minimum-bound property, meaning the timeout occurs no sooner than the time you specify, but can occur shortly thereafter. The maximum time that can be specified for this property is 12 hours (43200 seconds).",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::CloudFormation::WaitConditionHandle": {},
    "AWS::CloudFront::Distribution": {
        "DistributionConfig": {
            "title": "DistributionConfig",
            "description": "The distribution's configuration information.",
            "required": "Yes",
            "type": "DistributionConfig type",
            "update requires": "No interruption"
        }
    },
    "AWS::CloudTrail::Trail": {
        "IncludeGlobalServiceEvents": {
            "title": "IncludeGlobalServiceEvents",
            "description": "Indicates whether the trail is publishing events from global services, such as IAM, to the log files.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "IsLogging": {
            "title": "IsLogging",
            "description": "Indicates whether the CloudTrail trail is currently logging AWS API calls.",
            "required": "Yes",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "S3BucketName": {
            "title": "S3BucketName",
            "description": "The name of the Amazon S3 bucket where CloudTrail publishes log files.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "S3KeyPrefix": {
            "title": "S3KeyPrefix",
            "description": "An Amazon S3 object key prefix that precedes the name of all log files.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "SnsTopicName": {
            "title": "SnsTopicName",
            "description": "The name of an Amazon SNS topic that is notified when new log files are published.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::CloudWatch::Alarm": {
        "ActionsEnabled": {
            "title": "ActionsEnabled",
            "description": "Indicates whether or not actions should be executed during any changes to the alarm's state.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "AlarmActions": {
            "title": "AlarmActions",
            "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Number (ARN). For more information about creating alarms and the actions you can specify, see Creating Amazon CloudWatch Alarms in the Amazon CloudWatch Developer Guide.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "AlarmDescription": {
            "title": "AlarmDescription",
            "description": "The description for the alarm.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "AlarmName": {
            "title": "AlarmName",
            "description": "A name for the alarm. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the alarm name. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "ComparisonOperator": {
            "title": "ComparisonOperator",
            "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand.",
            "description-extra": "You can specify the following values: GreaterThanOrEqualToThreshold | GreaterThanThreshold | LessThanThreshold | LessThanOrEqualToThreshold",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Dimensions": {
            "title": "Dimensions",
            "description": "The dimensions for the alarm's associated metric.",
            "required": "No",
            "type": "List of Metric Dimension",
            "update requires": "No interruption"
        },
        "EvaluationPeriods": {
            "title": "EvaluationPeriods",
            "description": "The number of periods over which data is compared to the specified threshold.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "InsufficientDataActions": {
            "title": "InsufficientDataActions",
            "description": "The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Number (ARN). Currently the only action supported is publishing to an Amazon SNS topic or an Amazon Auto Scaling policy.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "MetricName": {
            "title": "MetricName",
            "description": "The name for the alarm's associated metric. For more information about the metrics that you can specify, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch Developer Guide.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Namespace": {
            "title": "Namespace",
            "description": "The namespace for the alarm's associated metric.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "OKActions": {
            "title": "OKActions",
            "description": "The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Number (ARN). Currently the only action supported is publishing to an Amazon SNS topic or an Amazon Auto Scaling policy.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "Period": {
            "title": "Period",
            "description": "The time over which the specified statistic is applied. You must specify a time in seconds that is also a multiple of 60.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Statistic": {
            "title": "Statistic",
            "description": "The statistic to apply to the alarm's associated metric.",
            "description-extra": "You can specify the following values: SampleCount | Average | Sum | Minimum | Maximum",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Threshold": {
            "title": "Threshold",
            "description": "The value against which the specified statistic is compared.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Unit": {
            "title": "Unit",
            "description": "The unit for the alarm's associated metric.",
            "description-extra": "You can specify the following values: Seconds | Microseconds | Milliseconds | Bytes | Kilobytes | Megabytes | Gigabytes | Terabytes | Bits | Kilobits | Megabits | Gigabits | Terabits | Percent | Count | Bytes/Second | Kilobytes/Second | Megabytes/Second | Gigabytes/Second | Terabytes/Second | Bits/Second | Kilobits/Second | Megabits/Second | Gigabits/Second | Terabits/Second | Count/Second | None",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::DynamoDB::Table": {
        "AttributeDefinitions": {
            "title": "AttributeDefinitions",
            "description": "A list of AttributeName and AttributeType objects that describe the key schema for the table and indexes.",
            "required": "Yes",
            "type": "DynamoDB Attribute Definitions",
            "update requires": "Replacement"
        },
        "GlobalSecondaryIndexes": {
            "title": "GlobalSecondaryIndexes",
            "description": "Global secondary indexes to be created on the table. You can create up to 5 global secondary indexes.",
            "required": "No",
            "type": "DynamoDB Global Secondary Indexes",
            "update requires": "Replacement"
        },
        "KeySchema": {
            "title": "KeySchema",
            "description": "Specifies the attributes that make up the primary key for the table. The attributes in the KeySchema property must also be defined in the AttributeDefinitions property.",
            "required": "Yes",
            "type": "DynamoDB Key Schema",
            "update requires": "Replacement"
        },
        "LocalSecondaryIndexes": {
            "title": "LocalSecondaryIndexes",
            "description": "Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes.",
            "required": "No",
            "type": "DynamoDB Local Secondary Indexes",
            "update requires": "Replacement"
        },
        "ProvisionedThroughput": {
            "title": "ProvisionedThroughput",
            "description": "Throughput for the specified table, consisting of values for ReadCapacityUnits and WriteCapacityUnits. For more information about the contents of a Provisioned Throughput structure, see DynamoDB Provisioned Throughput.",
            "required": "Yes",
            "type": "DynamoDB Provisioned Throughput",
            "update requires": "No interruption"
        },
        "TableName": {
            "title": "TableName",
            "description": "A name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "Name Type",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::CustomerGateway": {
        "BgpAsn": {
            "title": "BgpAsn",
            "description": "The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).",
            "required": "Yes",
            "type": "Number BgpAsn is always an integer value.",
            "update requires": "Replacement"
        },
        "IpAddress": {
            "title": "IpAddress",
            "description": "The internet-routable IP address for the customer gateway's outside interface. The address must be static.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "The tags that you want to attach to the resource.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags.",
            "update requires": "No interruption."
        },
        "Type": {
            "title": "Type",
            "description": "The type of VPN connection that this customer gateway supports.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement",
            "description-extra": "Example: ipsec.1"
        }
    },
    "AWS::EC2::DHCPOptions": {
        "DomainName": {
            "title": "DomainName",
            "description": "A domain name of your choice.",
            "required": "Conditional; see note.",
            "type": "String",
            "update requires": "Replacement",
            "description-extra": "Example: \"example.com\""
        },
        "DomainNameServers": {
            "title": "DomainNameServers",
            "description": "The IP (IPv4) address of a domain name server. You can specify up to four addresses.",
            "required": "Conditional; see note.",
            "type": "A list of strings",
            "update requires": "Replacement",
            "description-extra": "Example: \"DomainNameServers\" : [ \"10.0.0.1\", \"10.0.0.2\" ]Example: To preserve the order of IP addresses, specify a comma delimited list as a single string: \"DomainNameServers\" : [ \"10.0.0.1, 10.0.0.2\" ]"
        },
        "NetbiosNameServers": {
            "title": "NetbiosNameServers",
            "description": "The IP address (IPv4) of a NetBIOS name server. You can specify up to four addresses.",
            "required": "Conditional; see note.",
            "type": "A list of strings",
            "update requires": "Replacement",
            "description-extra": "Example: \"NetbiosNameServers\" : [ \"10.0.0.1\", \"10.0.0.2\" ]Example: To preserve the order of IP addresses, specify a comma delimited list as a single string: \"NetbiosNameServers\" : [ \"10.0.0.1, 10.0.0.2\" ]"
        },
        "NetbiosNodeType": {
            "title": "NetbiosNodeType",
            "description": "An integer value indicating the NetBIOS node type:",
            "description-extras": [
                "1: Broadcast (\"B\")",
                "2: Point-to-point (\"P\")",
                "4: Mixed mode (\"M\")",
                "8: Hybrid (\"H\")"
            ],
            "description-extra": "For more information about these values and about NetBIOS node types, see RFC 2132, RFC 1001, and RFC 1002. We recommend that you use only the value 2 at this time (broadcast and multicast are not currently supported).Example: \"NetbiosNodeType\" : 2",
            "required": "Required if NetBiosNameServers is specified; optional otherwise.",
            "type": "A list of numbers",
            "update requires": "Replacement"
        },
        "NtpServers": {
            "title": "NtpServers",
            "description": "The IP address (IPv4) of a Network Time Protocol (NTP) server. You can specify up to four addresses.",
            "required": "Conditional; see note.",
            "type": "A list of strings",
            "update requires": "Replacement",
            "description-extra": "Example: \"NtpServers\" : [ \"10.0.0.1\" ]Example: To preserve the order of IP addresses, specify a comma delimited list as a single string: \"NtpServers\" : [ \"10.0.0.1, 10.0.0.2\" ]"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this resource.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        }
    },
    "AWS::EC2::EIP": {
        "InstanceId": {
            "title": "InstanceId",
            "description": "The Instance ID of the Amazon EC2 instance that you want to associate with this Elastic IP address.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Domain": {
            "title": "Domain",
            "description": "Set to vpc to allocate the address to your Virtual Private Cloud (VPC). No other values are supported.",
            "description-note": "NoteIf you define an Elastic IP address and associate it with a VPC that is defined in the same template, you must declare a dependency on the VPC-gateway attachment by using the DependsOn attribute on this resource. For more information, see DependsOn Attribute.",
            "description-extra": "For more information, see AllocateAddress in the Amazon EC2 API Reference. For more information about Elastic IP Addresses in VPC, go to IP Addressing in Your VPC in the Amazon VPC User Guide.",
            "required": "Conditional. Required when allocating an address to a VPC",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::EIPAssociation": {
        "AllocationId": {
            "title": "AllocationId",
            "description": "Allocation ID for the VPC Elastic IP address you want to associate with an Amazon EC2 instance in your VPC.",
            "required": "Conditional. Required for a VPC.",
            "type": "String",
            "update requires": "Replacement if you also change the InstanceId or NetworkInterfaceId property. If not, update requires No interruption."
        },
        "EIP": {
            "title": "EIP",
            "description": "Elastic IP address that you want to associate with the Amazon EC2 instance specified by the InstanceId property. You can specify an existing Elastic IP address or a reference to an Elastic IP address allocated with a AWS::EC2::EIP resource.",
            "required": "Conditional. Required for Elastic IP addresses for use in EC2-Classic.",
            "type": "String",
            "update requires": "Replacement if you also change the InstanceId or NetworkInterfaceId property. If not, update requires No interruption."
        },
        "InstanceId": {
            "title": "InstanceId",
            "description": "Instance ID of the Amazon EC2 instance that you want to associate with the Elastic IP address specified by the EIP property.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement if you also change the AllocationId or EIP property. If not, update requires No interruption."
        },
        "NetworkInterfaceId": {
            "title": "NetworkInterfaceId",
            "description": "The ID of the network interface to associate with the Elastic IP address (VPC only).",
            "required": "No",
            "type": "String",
            "update requires": "Replacement if you also change the AllocationId or EIP property. If not, update requires No interruption."
        },
        "PrivateIpAddress": {
            "title": "PrivateIpAddress",
            "description": "The private IP address that you want to associate with the Elastic IP address. The private IP address is restricted to the primary and secondary private IP addresses that are associated with the network interface. By default, the private IP address that is associated with the EIP is the primary private IP address of the network interface.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::EC2::Instance": {
        "AvailabilityZone": {
            "title": "AvailabilityZone",
            "description": "Specifies the name of the Availability Zone in which the instance is located.",
            "description-extra": "For more information about AWS regions and Availability Zones, see Regions and Availability Zones in the Amazon EC2 User Guide.",
            "required": "No. If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the region.",
            "type": "String",
            "update requires": "Replacement"
        },
        "BlockDeviceMappings": {
            "title": "BlockDeviceMappings",
            "description": "Defines a set of Amazon Elastic Block Store block device mappings, ephemeral instance store block device mappings, or both. For more information, see Amazon Elastic Block Store or Amazon EC2 Instance Store in the Amazon EC2 User Guide for Linux Instances.",
            "required": "No",
            "type": "A list of Amazon EC2 Block Device Mapping Property.",
            "update requires": "Replacement. If you change only the DeleteOnTermination property for one or more block devices, update requires No interruption."
        },
        "DisableApiTermination": {
            "title": "DisableApiTermination",
            "description": "Specifies whether the instance can be terminated through the API.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "EbsOptimized": {
            "title": "EbsOptimized",
            "description": "Specifies whether the instance is optimized for Amazon Elastic Block Store I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance.",
            "description-extra": "For more information about the instance types that can be launched as Amazon EBS optimized instances, see Amazon EBS-Optimized Instances in the Amazon Elastic Compute Cloud User Guide. Additional fees are incurred when using Amazon EBS-optimized instances.",
            "required": "No. By default, AWS CloudFormation specifies false.",
            "type": "Boolean",
            "update requires": [
                "Some interruptions for Amazon EBS-backed instances",
                "Replacement for instance store-backed instances"
            ]
        },
        "IamInstanceProfile": {
            "title": "IamInstanceProfile",
            "description": "The physical ID of an instance profile or a reference to an AWS::IAM::InstanceProfile resource.",
            "description-extra": "For more information about IAM roles, see Working with Roles in the AWS Identity and Access Management User Guide.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "ImageId": {
            "title": "ImageId",
            "description": "Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "InstanceInitiatedShutdownBehavior": {
            "title": "InstanceInitiatedShutdownBehavior",
            "description": "Indicates whether an instance stops or terminates when you shut down the instance from the instance's operating system shutdown command. You can specify stop or terminate. For more information, see the RunInstances command in the Amazon EC2 API Reference.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "InstanceType": {
            "title": "InstanceType",
            "description": "The instance type, such as t2.micro. The default type is \"m1.small\". For a list of instance types, see Instance Families and Types.",
            "required": "No",
            "type": "String",
            "update requires": [
                "Some interruptions for Amazon EBS-backed instances",
                "Replacement for instance store-backed instances"
            ]
        },
        "KernelId": {
            "title": "KernelId",
            "description": "The kernel ID.",
            "required": "No",
            "type": "String",
            "update requires": [
                "Some interruptions for Amazon EBS-backed instances",
                "Replacement for instance store-backed instances"
            ]
        },
        "KeyName": {
            "title": "KeyName",
            "description": "Provides the name of the Amazon EC2 key pair.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Monitoring": {
            "title": "Monitoring",
            "description": "Specifies whether monitoring is enabled for the instance.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "NetworkInterfaces": {
            "title": "NetworkInterfaces",
            "description": "A list of embedded objects that describe the network interfaces to associate with this instance.",
            "description-note": "NoteIf this resource has a public IP address and is also in a VPC that is defined in the same template, you must use theDependsOn attribute to declare a dependency on the VPC-gateway attachment. For more information,see DependsOn Attribute.",
            "required": "No",
            "type": "A list of EC2 NetworkInterface Embedded Property Type",
            "update requires": "Replacement"
        },
        "PlacementGroupName": {
            "title": "PlacementGroupName",
            "description": "The name of an existing placement group that you want to launch the instance into (for cluster instances).",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "PrivateIpAddress": {
            "title": "PrivateIpAddress",
            "description": "The private IP address for this instance.",
            "description-note": "ImportantIf you make an update to an instance that requires replacement, you must assign a new private IP address. During a replacement, AWS CloudFormation creates a new instance but doesn't delete the old instance until the stack has successfully updated. If the stack update fails, AWS CloudFormation uses the old instance in order to roll back the stack to the previous working state. The old and new instances cannot have the same private IP address.",
            "description-extra": "(Optional) If you're using Amazon VPC, you can use this parameter to assign the instance a specific available IP address from the subnet (for example, 10.0.0.25). By default, Amazon VPC selects an IP address from the subnet for the instance.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "RamdiskId": {
            "title": "RamdiskId",
            "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.",
            "required": "No",
            "type": "String",
            "update requires": [
                "Some interruptions for Amazon EBS-backed instances",
                "Replacement for instance store-backed instances"
            ]
        },
        "SecurityGroupIds": {
            "title": "SecurityGroupIds",
            "description": "A list that contains the security group IDs for VPC security groups to assign to the Amazon EC2 instance. If you specified the NetworkInterfaces property, do not specify this property.",
            "required": "Conditional. Required for VPC security groups.",
            "type": "A list of strings",
            "update requires": [
                "No interruption for instances that are in a VPC.",
                "Replacement for instances that are not in a VPC."
            ]
        },
        "SecurityGroups": {
            "title": "SecurityGroups",
            "description": "Valid only for Amazon EC2 security groups. A list that contains the Amazon EC2 security groups to assign to the Amazon EC2 instance. The list can contain both the name of existing Amazon EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "Replacement."
        },
        "SourceDestCheck": {
            "title": "SourceDestCheck",
            "description": "Controls whether source/destination checking is enabled on the instance. Also determines if an instance in a VPC will perform network address translation (NAT).",
            "description-extra": "A value of \"true\" means that source/destination checking is enabled, and a value of \"false\" means that checking is disabled. For the instance to perform NAT, the value must be \"false\". For more information, see NAT Instances in the Amazon Virtual Private Cloud User Guide.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "SubnetId": {
            "title": "SubnetId",
            "description": "If you're using Amazon VPC, this property specifies the ID of the subnet that you want to launch the instance into. If you specified the NetworkInterfaces property, do not specify this property.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this instance.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        },
        "Tenancy": {
            "title": "Tenancy",
            "description": "The tenancy of the instance that you want to launch. This value can be either \"default\" or \"dedicated\". An instance that has a tenancy value of \"dedicated\" runs on single-tenant hardware and can be launched only into a VPC. For more information, see Using EC2 Dedicated Instances Within Your VPC in the Amazon VPC User Guide.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "UserData": {
            "title": "UserData",
            "description": "Base64-encoded MIME user data that is made available to the instances.",
            "required": "No",
            "type": "String",
            "update requires": [
                "Some interruptions for Amazon EBS-backed instances",
                "Replacement for instance store-backed instances"
            ]
        },
        "Volumes": {
            "title": "Volumes",
            "description": "The Amazon EBS volumes to attach to the instance.",
            "description-note": "NoteBefore detaching a volume, unmount any file systems on the device within your operating system. If you don't unmount the file system, a volume might get stuck in a busy state while detaching.",
            "required": "No",
            "type": "A list of EC2 MountPoints.",
            "update requires": "No interruption"
        }
    },
    "AWS::EC2::InternetGateway": {
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this resource.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        }
    },
    "AWS::EC2::NetworkAcl": {
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this ACL.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        },
        "VpcId": {
            "title": "VpcId",
            "description": "The ID of the VPC where the network ACL will be created.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::NetworkAclEntry": {
        "CidrBlock": {
            "title": "CidrBlock",
            "description": "The CIDR range to allow or deny, in CIDR notation (e.g., 172.16.0.0/24).",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Egress": {
            "title": "Egress",
            "description": "Whether this rule applies to egress traffic from the subnet (\"true\") or ingress traffic to the subnet (\"false\").",
            "required": "Yes",
            "type": "Boolean",
            "update requires": "Replacement."
        },
        "Icmp": {
            "title": "Icmp",
            "description": "The Internet Control Message Protocol (ICMP) code and type.",
            "required": "Conditional required if specifying 1 (ICMP) for the protocol parameter.",
            "type": "EC2 ICMP Property Type",
            "update requires": "No interruption"
        },
        "NetworkAclId": {
            "title": "NetworkAclId",
            "description": "ID of the ACL where the entry will be created.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement."
        },
        "PortRange": {
            "title": "PortRange",
            "description": "The range of port numbers for the UDP/TCP protocol.",
            "required": "Conditional Required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "type": "EC2 PortRange Property Type",
            "update requires": "No interruption"
        },
        "Protocol": {
            "title": "Protocol",
            "description": "IP protocol the rule applies to. You can use -1 to mean all protocols. This must be -1 or a protocol number (go to Protocol Numbers at iana.org).",
            "required": "Yes",
            "type": "Number",
            "update requires": "No interruption"
        },
        "RuleAction": {
            "title": "RuleAction",
            "description": "Whether to allow or deny traffic that matches the rule; valid values are \"allow\" or \"deny\".",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "RuleNumber": {
            "title": "RuleNumber",
            "description": "Rule number to assign to the entry (e.g., 100). This must be a positive integer from 1 to 32766.",
            "required": "Yes",
            "type": "Number",
            "update requires": "Replacement."
        }
    },
    "AWS::EC2::NetworkInterface": {
        "Description": {
            "title": "Description",
            "description": "The description of this network interface.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption."
        },
        "GroupSet": {
            "title": "GroupSet",
            "description": "A list of security group IDs associated with this network interface.",
            "required": "No",
            "type": "List of strings.",
            "update requires": "No interruption"
        },
        "PrivateIpAddress": {
            "title": "PrivateIpAddress",
            "description": "Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the PrivateIpAddresses property.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement."
        },
        "PrivateIpAddresses": {
            "title": "PrivateIpAddresses",
            "description": "Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want Amazon EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.",
            "description-extra": "For information about the maximum number of private IP addresses, see Private IP Addresses Per ENI Per Instance Type in the Amazon EC2 User Guide for Linux Instances.",
            "required": "No",
            "type": "list of PrivateIpAddressSpecification.",
            "update requires": "Replacement if you change the primary private IP address. If not, update requires No interruption."
        },
        "SecondaryPrivateIpAddressCount": {
            "title": "SecondaryPrivateIpAddressCount",
            "description": "The number of secondary private IP addresses that Amazon EC2 automatically assigns to the network interface. Amazon EC2 uses the value of the PrivateIpAddress property as the primary private IP address. If you don't specify that property, Amazon EC2 automatically assigns both the primary and secondary private IP addresses.",
            "description-extra": "If you want to specify your own list of private IP addresses, use the PrivateIpAddresses property and do not specify this property.For information about the maximum number of private IP addresses, see Private IP Addresses Per ENI Per Instance Type in the Amazon EC2 User Guide for Linux Instances.",
            "required": "No",
            "type": "Integer.",
            "update requires": "No interruption."
        },
        "SourceDestCheck": {
            "title": "SourceDestCheck",
            "description": "Flag indicating whether traffic to or from the instance is validated.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption."
        },
        "SubnetId": {
            "title": "SubnetId",
            "description": "The ID of the subnet to associate with the network interface.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement."
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this network interface.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        }
    },
    "AWS::EC2::NetworkInterfaceAttachment": {
        "DeleteOnTermination": {
            "title": "DeleteOnTermination",
            "description": "Whether to delete the network interface when the instance terminates. By default, this value is set to True.",
            "required": "No",
            "type": "Boolean.",
            "update requires": "No interruption"
        },
        "DeviceIndex": {
            "title": "DeviceIndex",
            "description": "The network interface's position in the attachment order. For example, the first attached network interface has a DeviceIndex of 0.",
            "required": "Yes.",
            "type": "String.",
            "update requires": "No interruption"
        },
        "InstanceId": {
            "title": "InstanceId",
            "description": "The ID of the instance to which you will attach the ENI.",
            "required": "Yes.",
            "type": "String.",
            "update requires": "No interruption"
        },
        "NetworkInterfaceId": {
            "title": "NetworkInterfaceId",
            "description": "The ID of the ENI that you want to attach.",
            "required": "Yes.",
            "type": "String.",
            "update requires": "No interruption"
        }
    },
    "AWS::EC2::Route": {
        "DestinationCidrBlock": {
            "title": "DestinationCidrBlock",
            "description": "The CIDR address block used for the destination match. For example, \"0.0.0.0/0\". Routing decisions are based on the most specific match.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "GatewayId": {
            "title": "GatewayId",
            "description": "The ID of a gateway attached to your VPC. For example: \"igw-eaad4883\".",
            "description-extra": "For route entries that specify a gateway, you must specify a dependency on the gateway attachment resource. For more information, see DependsOn Attribute.",
            "required": "Conditional. You must provide only one of the following: a GatewayId, InstanceId, NetworkInterfaceId, or VpcPeeringConnectionId.",
            "type": "String",
            "update requires": "No interruption"
        },
        "InstanceId": {
            "title": "InstanceId",
            "description": "The ID of a NAT instance in your VPC. For example, \"i-1a2b3c4d\".",
            "required": "Conditional. You must provide only one of the following: a GatewayId, InstanceId, NetworkInterfaceId, or VpcPeeringConnectionId.",
            "type": "String",
            "update requires": "No interruption"
        },
        "NetworkInterfaceId": {
            "title": "NetworkInterfaceId",
            "description": "Allows the routing of network interface IDs. ",
            "required": "Conditional. You must provide only one of the following: a GatewayId, InstanceId, NetworkInterfaceId, or VpcPeeringConnectionId.",
            "type": "String",
            "update requires": "No interruption"
        },
        "RouteTableId": {
            "title": "RouteTableId",
            "description": "The ID of the route table where the route will be added.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "VpcPeeringConnectionId": {
            "title": "VpcPeeringConnectionId",
            "description": "The ID of a VPC peering connection.",
            "required": "Conditional. You must provide only one of the following: a GatewayId, InstanceId, NetworkInterfaceId, or VpcPeeringConnectionId.",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::EC2::RouteTable": {
        "VpcId": {
            "title": "VpcId",
            "description": "The ID of the VPC where the route table will be created.",
            "description-extra": "Example: vpc-11ad4878",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this route table.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        }
    },
    "AWS::EC2::SecurityGroup": {
        "GroupDescription": {
            "title": "GroupDescription",
            "description": "Description of the security group.",
            "type": "String",
            "required": "Yes",
            "update requires": "Replacement"
        },
        "SecurityGroupEgress": {
            "title": "SecurityGroupEgress",
            "description": "A list of Amazon EC2 security group egress rules.",
            "type": "EC2 Security Group Rule",
            "required": "No",
            "update requires": "No interruption"
        },
        "SecurityGroupIngress": {
            "title": "SecurityGroupIngress",
            "description": "A list of Amazon EC2 security group ingress rules.",
            "type": "EC2 Security Group Rule",
            "required": "No",
            "update requires": "No interruption"
        },
        "Tags": {
            "title": "Tags",
            "description": "The tags that you want to attach to the resource.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags.",
            "update requires": "No interruption."
        },
        "VpcId": {
            "title": "VpcId",
            "description": "The physical ID of the VPC. Can be obtained by using a reference to an AWS::EC2::VPC, such as: { \"Ref\" : \"myVPC\" }.",
            "description-extra": "For more information about using the Ref function, see Ref.",
            "type": "String",
            "required": "Yes, for VPC security groups",
            "update requires": "Replacement",
            "update-note": "NoteFor more information about VPC security groups, go to Security Groups in the Amazon VPC User Guide."
        }
    },
    "AWS::EC2::SecurityGroupEgress": {
        "CidrIp": {
            "title": "CidrIp",
            "description": "CIDR range.",
            "type": "String",
            "required": "Conditional. Cannot be used when specifying a destination security group.",
            "update requires": "Replacement"
        },
        "DestinationSecurityGroupId": {
            "title": "DestinationSecurityGroupId",
            "description": "Specifies the group ID of the destination Amazon VPC security group.",
            "type": "String",
            "required": "Conditional. Cannot be used when specifying a CIDR IP address.",
            "update requires": "Replacement"
        },
        "FromPort": {
            "title": "FromPort",
            "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP type number).",
            "type": "Integer",
            "required": "Yes",
            "update requires": "Replacement"
        },
        "GroupId": {
            "title": "GroupId",
            "description": "ID of the Amazon VPC security group to modify. This value can be a reference to an AWS::EC2::SecurityGroup resource that has a valid VpcId property or the ID of an existing Amazon VPC security group.",
            "type": "String",
            "required": "Yes",
            "update requires": "Replacement"
        },
        "IpProtocol": {
            "title": "IpProtocol",
            "description": "IP protocol name or number. For valid values, see the IpProtocol parameter in AuthorizeSecurityGroupIngress",
            "type": "String",
            "required": "Yes",
            "update requires": "Replacement"
        },
        "ToPort": {
            "title": "ToPort",
            "description": "End of port range for the TCP and UDP protocols, or an ICMP code. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP code).",
            "type": "Integer",
            "required": "Yes",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::SecurityGroupIngress": {
        "CidrIp": {
            "title": "CidrIp",
            "description": "Specifies a CIDR range.",
            "description-extra": "For an overview of CIDR ranges, go to the Wikipedia Tutorial.",
            "type": "String",
            "required": "Conditional. If you specify SourceSecurityGroupName, do not specify CidrIp.",
            "update requires": "Replacement"
        },
        "FromPort": {
            "title": "FromPort",
            "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP type number).",
            "type": "Integer",
            "required": "Yes, for ICMP and any protocol that uses ports.",
            "update requires": "Replacement"
        },
        "GroupId": {
            "title": "GroupId",
            "description": "ID of the Amazon EC2 or VPC security group to modify. The group must belong to your account.",
            "type": "String",
            "required": "Conditional. You must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property. For example, EC2-VPC accounts must use the GroupId property.",
            "update requires": "Replacement"
        },
        "GroupName": {
            "title": "GroupName",
            "description": "Name of the Amazon EC2 security group (non-VPC security group) to modify. This value can be a reference to an AWS::EC2::SecurityGroup resource or the name of an existing Amazon EC2 security group.",
            "type": "String",
            "required": "Conditional. You must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property. For example, EC2-VPC accounts must use the GroupId property.",
            "update requires": "Replacement"
        },
        "IpProtocol": {
            "title": "IpProtocol",
            "description": "IP protocol name or number. For valid values, see the IpProtocol parameter in AuthorizeSecurityGroupIngress",
            "type": "String",
            "required": "Yes",
            "update requires": "Replacement"
        },
        "SourceSecurityGroupId": {
            "title": "SourceSecurityGroupId",
            "description": "Specifies the ID of the source security group or uses the Ref intrinsic function to refer to the logical ID of a security group defined in the same template.",
            "type": "String",
            "required": "Conditional. If you specify CidrIp, do not specify SourceSecurityGroupId.",
            "update requires": "Replacement"
        },
        "SourceSecurityGroupName": {
            "title": "SourceSecurityGroupName",
            "description": "Specifies the name of the Amazon EC2 security group (non-VPC security group) to allow access or uses the Ref intrinsic function to refer to the logical name of a security group defined in the same template. For instances in a VPC, specify the SourceSecurityGroupId property.",
            "type": "String",
            "required": "Conditional. If you specify CidrIp, do not specify SourceSecurityGroupName.",
            "update requires": "Replacement"
        },
        "SourceSecurityGroupOwnerId": {
            "title": "SourceSecurityGroupOwnerId",
            "description": "Specifies the AWS Account ID of the owner of the Amazon EC2 security group specified in the SourceSecurityGroupName property.",
            "type": "String",
            "required": "Conditional. If you specify SourceSecurityGroupName and that security group is owned by a different account than the account creating the stack, you must specify the SourceSecurityGroupOwnerId; otherwise, this property is optional.",
            "update requires": "Replacement"
        },
        "ToPort": {
            "title": "ToPort",
            "description": "End of port range for the TCP and UDP protocols, or an ICMP code. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP code).",
            "type": "Integer",
            "required": "Yes, for ICMP and any protocol that uses ports.",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::Subnet": {
        "AvailabilityZone": {
            "title": "AvailabilityZone",
            "description": "The availability zone in which you want the subnet. Default: AWS selects a zone for you (recommended).",
            "required": "No",
            "type": "String",
            "description-extra": " Update requires: Replacement  ",
            "type-note": "NoteIf you update this property, you must also update the CidrBlock property."
        },
        "CidrBlock": {
            "title": "CidrBlock",
            "description": "The CIDR block that you want the subnet to cover (for example, \"10.0.0.0/24\").",
            "required": "Yes",
            "type": "String",
            "description-extra": " Update requires: Replacement  ",
            "type-note": "NoteIf you update this property, you must also update the AvailabilityZone property."
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this subnet.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        },
        "VpcId": {
            "title": "VpcId",
            "description": "A Ref structure that contains the ID of the VPC on which you want to create the subnet. The VPC ID is provided as the value of the \"Ref\" property, as: { \"Ref\": \"VPCID\" }.",
            "required": "Yes",
            "type": "Ref ID",
            "description-extra": " Update requires: Replacement  ",
            "type-note": "NoteIf you update this property, you must also update the CidrBlock property."
        }
    },
    "AWS::EC2::SubnetNetworkAclAssociation": {
        "SubnetId": {
            "title": "SubnetId",
            "description": "The ID representing the current association between the original network ACL and the subnet.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "NetworkAclId": {
            "title": "NetworkAclId",
            "description": "The ID of the new ACL to associate with the subnet.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::SubnetRouteTableAssociation": {
        "RouteTableId": {
            "title": "RouteTableId",
            "description": "The ID of the route table. This is commonly written as a reference to a route table declared elsewhere in the template. For example:",
            "description-example": "\"RouteTableId\" : { \"Ref\" : \"myRouteTable\" }",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption. However, the physical ID changes when the route table ID is changed."
        },
        "SubnetId": {
            "title": "SubnetId",
            "description": "The ID of the subnet. This is commonly written as a reference to a subnet declared elsewhere in the template. For example:",
            "description-example": "\"SubnetId\" : { \"Ref\" : \"mySubnet\" }",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::Volume": {
        "AvailabilityZone": {
            "title": "AvailabilityZone",
            "description": "The Availability Zone in which to create the new volume.",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Encrypted": {
            "title": "Encrypted",
            "description": "Indicates whether the volume is encrypted. Encrypted Amazon EBS volumes can only be attached to instance types that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are automatically encrypted. You cannot create an encrypted volume from an unencrypted snapshot or vice versa. If your AMI uses encrypted volumes, you can only launch the AMI on supported instance types. For more information, see Amazon EBS encryption in the Amazon EC2 User Guide for Linux Instances.",
            "required": "No",
            "type": "Boolean",
            "update requires": "Updates are not supported."
        },
        "Iops": {
            "title": "Iops",
            "description": "The number of I/O operations per second (IOPS) that the volume supports. This can be any integer value from 1–4000.",
            "required": "Conditional. Required when the volume type is io1; not used with other volume types.",
            "type": "Number",
            "update requires": "Updates are not supported."
        },
        "Size": {
            "title": "Size",
            "description": "The size of the volume, in gibibytes (GiBs). This can be any value from 10–1024.",
            "description-note": "NoteThe size of the EBS volume must accommodate the IOPS you need. There is a 10 : 1 ratio between IOPS and Gibibytes (GiB) of storage, so for 100 PIOPS, you need at least 10 GiB storage on the root volume.",
            "required": "Conditional. Required if you are not creating a volume from a snapshot. If you specify Size, do not specify SnapshotId.",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "SnapshotId": {
            "title": "SnapshotId",
            "description": "The snapshot from which to create the new volume.",
            "required": "Conditional Required if you are creating a volume from a snapshot. If you do not specify a value for SnapshotId, you must specify a value for Size.",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this volume.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "Updates are not supported."
        },
        "VolumeType": {
            "title": "VolumeType",
            "description": "The volume type. You can specify standard, io1, or gp2. If you set the type to io1, you must also set the Iops property. For more information about these values and the default value, see CreateVolume in the Amazon EC2 API Reference.",
            "required": "No",
            "type": "String",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::EC2::VolumeAttachment": {
        "Device": {
            "title": "Device",
            "description": "How the device is exposed to the instance (e.g., /dev/sdh, or xvdh).",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "InstanceId": {
            "title": "InstanceId",
            "description": "The ID of the instance to which the volume attaches. This value can be a reference to an AWS::EC2::Instance resource, or it can be the physical ID of an existing EC2 instance.",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "VolumeId": {
            "title": "VolumeId",
            "description": "The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone. This value can be a reference to an AWS::EC2::Volume resource, or it can be the volume ID of an existing Amazon EBS volume.",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::EC2::VPC": {
        "CidrBlock": {
            "title": "CidrBlock",
            "description": "The CIDR block you want the VPC to cover. For example: \"10.0.0.0/16\".",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "EnableDnsSupport": {
            "title": "EnableDnsSupport",
            "description": "Specifies whether DNS resolution is supported for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not. By default the value is set to true.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "EnableDnsHostnames": {
            "title": "EnableDnsHostnames",
            "description": "Specifies whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not. You can only set EnableDnsHostnames to true if you also set the EnableDnsSupport attribute to true. By default, the value is set to false.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "InstanceTenancy": {
            "title": "InstanceTenancy",
            "description": "The allowed tenancy of instances launched into the VPC. ",
            "description-extras": [
                "\"default\": Instances can be launched with any\n                        tenancy.",
                "\"dedicated\": Any instance launched into the VPC will\n                        automatically be dedicated, regardless of the tenancy option you specify\n                        when you launch the instance."
            ],
            "required": "No",
            "type": "String",
            "description-extra": "Valid values: \"default\" or \"dedicated\"",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this VPC.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        }
    },
    "AWS::EC2::VPCDHCPOptionsAssociation": {
        "DhcpOptionsId": {
            "title": "DhcpOptionsId",
            "description": "The ID of the DHCP options you want to associate with the VPC. Specify default if you want the VPC to use no DHCP options.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "VpcId": {
            "title": "VpcId",
            "description": "The ID of the VPC to associate with this DHCP options set.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::VPCGatewayAttachment": {
        "InternetGatewayId": {
            "title": "InternetGatewayId",
            "description": "The ID of the Internet gateway.",
            "required": "Conditional You must specify either InternetGatewayId or VpnGatewayId, but not both.",
            "type": "String",
            "update requires": "No interruption"
        },
        "VpcId": {
            "title": "VpcId",
            "description": "The ID of the VPC to associate with this gateway.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "VpnGatewayId": {
            "title": "VpnGatewayId",
            "description": "The ID of the virtual private network (VPN) gateway to attach to the VPC.",
            "required": "Conditional You must specify either InternetGatewayId or VpnGatewayId, but not both.",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::EC2::VPCPeeringConnection": {
        "PeerVpcId": {
            "title": "PeerVpcId",
            "description": "The ID of the VPC with which you are creating the peering connection.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this resource.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        },
        "VpcId": {
            "title": "VpcId",
            "description": "The ID of the VPC that is requesting a peering connection.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::VPNConnection": {
        "Type": {
            "title": "Type",
            "description": "The type of VPN connection this virtual private gateway supports.",
            "description-extra": "Example: \"ipsec.1\"",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "CustomerGatewayId": {
            "title": "CustomerGatewayId",
            "description": "The ID of the customer gateway. This can either be an embedded JSON object or a reference to a Gateway ID.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "StaticRoutesOnly": {
            "title": "StaticRoutesOnly",
            "description": "Indicates whether the VPN connection requires static routes.",
            "required": "Conditional: If you are creating a VPN connection for a device that does not support Border Gateway Protocol (BGP), you must specify true.",
            "type": "Boolean",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "The tags that you want to attach to the resource.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags.",
            "update requires": "No interruption."
        },
        "VpnGatewayId": {
            "title": "VpnGatewayId",
            "description": "The ID of the virtual private gateway. This can either be an embedded JSON object or a reference to a Gateway ID.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::VPNConnectionRoute": {
        "DestinationCidrBlock": {
            "title": "DestinationCidrBlock",
            "description": "The CIDR block that is associated with the local subnet of the customer network.",
            "required": "Yes.",
            "type": "String",
            "update requires": "Replacement"
        },
        "VpnConnectionId": {
            "title": "VpnConnectionId",
            "description": "The ID of the VPN connection.",
            "required": "Yes.",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::EC2::VPNGateway": {
        "Type": {
            "title": "Type",
            "description": "The type of VPN connection this virtual private gateway supports. The only valid value is \"ipsec.1\".",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this resource.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        }
    },
    "AWS::EC2::VPNGatewayRoutePropagation": {
        "RouteTableIds": {
            "title": "RouteTableIds",
            "description": "A list of routing table IDs that are associated with a VPC. The routing tables must be associated with the same VPC that the virtual private gateway is attached to.",
            "required": "Yes",
            "type": "List of route table IDs",
            "update requires": "No interruption"
        },
        "VpnGatewayId": {
            "title": "VpnGatewayId",
            "description": "The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::ElastiCache::CacheCluster": {
        "AutoMinorVersionUpgrade": {
            "title": "AutoMinorVersionUpgrade",
            "description": "Indicates that minor engine upgrades will be applied automatically to the cache cluster during the maintenance window.",
            "required": "No",
            "type": "Boolean",
            "description-extra": "Default: true",
            "update requires": "No interruption"
        },
        "CacheNodeType": {
            "title": "CacheNodeType",
            "description": "The compute and memory capacity of nodes in a cache cluster.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "CacheParameterGroupName": {
            "title": "CacheParameterGroupName",
            "description": "The name of the cache parameter group that is associated with this cache cluster.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "CacheSecurityGroupNames": {
            "title": "CacheSecurityGroupNames",
            "description": "A list of cache security group names that are associated with this cache cluster. If your cache cluster is in a VPC, specify the VpcSecurityGroupIds property instead.",
            "required": "If your cache cluster isn't in a VPC, you must specify this property.",
            "type": "List of Strings",
            "update requires": "No interruption"
        },
        "CacheSubnetGroupName": {
            "title": "CacheSubnetGroupName",
            "description": "The cache subnet group that you associate with a cache cluster.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "ClusterName": {
            "title": "ClusterName",
            "description": "A name for the cache cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the cache cluster. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "description-extra": "The name must contain 1 to 20 alphanumeric characters or hyphens. The name must start with a letter and cannot end with a hyphen or contain two consecutive hyphens.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Engine": {
            "title": "Engine",
            "description": "The name of the cache engine to be used for this cache cluster, such as memcached or redis.",
            "description-note": "NoteAWS CloudFormation does not currently support replication groups and read replicas for Redis. ",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "EngineVersion": {
            "title": "EngineVersion",
            "description": "The version of the cache engine to be used for this cluster.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "NotificationTopicArn": {
            "title": "NotificationTopicArn",
            "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications will be sent.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "NumCacheNodes": {
            "title": "NumCacheNodes",
            "description": "The number of cache nodes that the cache cluster should have.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Port": {
            "title": "Port",
            "description": "The port number on which each of the cache nodes will accept connections.",
            "required": "No",
            "type": "Integer",
            "update requires": "Replacement"
        },
        "PreferredAvailabilityZone": {
            "title": "PreferredAvailabilityZone",
            "description": "The EC2 Availability Zone in which the cache cluster is created.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "PreferredMaintenanceWindow": {
            "title": "PreferredMaintenanceWindow",
            "description": "The weekly time range (in UTC) during which system maintenance can occur.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "SnapshotArns": {
            "title": "SnapshotArns",
            "description": "The ARN of the snapshot file that you want to use to seed a new Redis cache cluster. If you manage a Redis instance outside of Amazon ElastiCache, you can create a new cache cluster in ElastiCache by using a snapshot file that is stored in an Amazon S3 bucket.",
            "required": "No",
            "type": "String list",
            "update requires": "Replacement"
        },
        " VpcSecurityGroupIds ": {
            "title": " VpcSecurityGroupIds ",
            "description": "A list of VPC security group IDs. If your cache cluster isn't in a VPC, specify the CacheSecurityGroupNames property instead.",
            "description-extra": "  ",
            "description-note": "NoteYou must use the AWS::EC2::SecurityGroup resource instead of the AWS::ElastiCache::SecurityGroup resource in order to specify an ElastiCache security group that is in a VPC. In addition, if you use the default VPC for your AWS account, you must use the Fn::GetAtt function and the GroupId attribute to retrieve security group IDs (instead of the Ref function). To see a sample template, see the Template Snippet section.",
            "required": "If your cache cluster is in a VPC, you must specify this property.",
            "type": "List of strings",
            "update requires": "No interruption"
        }
    },
    "AWS::ElastiCache::ParameterGroup": {
        "CacheParameterGroupFamily": {
            "title": "CacheParameterGroupFamily",
            "description": "The name of the cache parameter group family that the cache parameter group can be used with.",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Description": {
            "title": "Description",
            "description": "The description for the Cache Parameter Group.",
            "required": "Yes",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Properties": {
            "title": "Properties",
            "description": "A comma-delimited list of parameter name/value pairs. For more information, go to ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide.",
            "description-extra": "Example:",
            "description-example": "\"Properties\" : { \"cas_disabled\" : \"1\", \"chunk_size_growth_factor\" : \"1.02\"} ",
            "required": "Yes",
            "type": "JSON object",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::ElastiCache::SecurityGroup": {
        "Description": {
            "title": "Description",
            "description": "A description for the cache security group.",
            "type": "String",
            "required": "No",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::ElastiCache::SecurityGroupIngress": {
        "CacheSecurityGroupName": {
            "title": "CacheSecurityGroupName",
            "description": "The name of the Cache Security Group to authorize.",
            "type": "String",
            "required": "Yes",
            "update requires": "Updates are not supported."
        },
        "EC2SecurityGroupName": {
            "title": "EC2SecurityGroupName",
            "description": "Name of the EC2 Security Group to include in the authorization.",
            "type": "String",
            "required": "Yes",
            "update requires": "Updates are not supported."
        },
        "EC2SecurityGroupOwnerId": {
            "title": "EC2SecurityGroupOwnerId",
            "description": "Specifies the AWS Account ID of the owner of the EC2 security group specified in the EC2SecurityGroupName property. The AWS access key ID is not an acceptable value.",
            "type": "String",
            "required": "No",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::ElastiCache::SubnetGroup ": {
        "Description": {
            "title": "Description",
            "description": "The description for the cache subnet group.",
            "type": "String",
            "required": "Yes",
            "update requires": "No interruption"
        },
        "SubnetIds": {
            "title": "SubnetIds",
            "description": "The Amazon EC2 subnet IDs for the cache subnet group.",
            "type": "String list",
            "required": "Yes",
            "update requires": "No interruption"
        }
    },
    "AWS::ElasticBeanstalk::Application": {
        "ApplicationName": {
            "title": "ApplicationName",
            "description": "A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Description": {
            "title": "Description",
            "description": "An optional description of this application.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::ElasticBeanstalk::ApplicationVersion": {
        "ApplicationName": {
            "title": "ApplicationName",
            "description": "Name of the Elastic Beanstalk application that is associated with this application version.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Description": {
            "title": "Description",
            "description": "A description of this application version.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "SourceBundle": {
            "title": "SourceBundle",
            "description": "The location of the source bundle for this version.",
            "required": "No",
            "type": "Source Bundle",
            "update requires": "Replacement"
        }
    },
    "AWS::ElasticBeanstalk::ConfigurationTemplate": {
        "ApplicationName": {
            "title": "ApplicationName",
            "description": "Name of the Elastic Beanstalk application that is associated with this configuration template.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Description": {
            "title": "Description",
            "description": "An optional description for this configuration.",
            "type": "String",
            "required": "No",
            "update requires": "Some interruptions"
        },
        "EnvironmentId": {
            "title": "EnvironmentId",
            "description": "An environment whose settings you want to use to create the configuration template. You must specify this property if you don't specify the SolutionStackName or SourceConfiguration properties.",
            "type": "String",
            "required": "Conditional",
            "update requires": "Replacement"
        },
        "OptionSettings": {
            "title": "OptionSettings",
            "description": "A list of OptionSettings for this Elastic Beanstalk configuration. For a complete list of Elastic Beanstalk configuration options, see Option Values, in the AWS Elastic Beanstalk Developer Guide.",
            "type": "A list of OptionSettings.",
            "required": "No",
            "update requires": "Some interruptions"
        },
        "SolutionStackName": {
            "title": "SolutionStackName",
            "description": "The name of an Elastic Beanstalk solution stack that this configuration will use. A solution stack specifies the operating system, architecture, and application server for a configuration template, such as 64bit Amazon Linux 2013.09 running Tomcat 7 Java 7. For more information, see Supported Platforms in the AWS Elastic Beanstalk Developer Guide.",
            "description-extra": "You must specify this property if you don't specify the EnvironmentId or SourceConfiguration properties.",
            "type": "String",
            "required": "Conditional",
            "update requires": "Replacement"
        },
        "SourceConfiguration": {
            "title": "SourceConfiguration",
            "description": "A configuration template that is associated with another Elastic Beanstalk application. If you specify the SolutionStackName property and the SourceConfiguration property, the solution stack in the source configuration template must match the value that you specified for the SolutionStackName property.",
            "description-extra": "You must specify this property if you don't specify the EnvironmentId or SolutionStackName properties.",
            "type": "Elastic Beanstalk SourceConfiguration Property Type",
            "required": "Conditional",
            "update requires": "Replacement"
        }
    },
    "AWS::ElasticBeanstalk::Environment": {
        "ApplicationName": {
            "title": "ApplicationName",
            "description": "The name of the application that is associated with this environment.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "CNAMEPrefix": {
            "title": "CNAMEPrefix",
            "description": "A prefix for your Elastic Beanstalk environment URL.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Description": {
            "title": "Description",
            "description": "A description that helps you identify this environment.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "EnvironmentName": {
            "title": "EnvironmentName",
            "description": "A name for the Elastic Beanstalk environment. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the environment name. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "OptionSettings": {
            "title": "OptionSettings",
            "description": "Key-value pairs defining configuration options for this environment. These options override the values that are defined in the solution stack or the configuration template. If you remove any options during a stack update, the removed options revert to default values.",
            "required": "No",
            "type": "A list of OptionSettings.",
            "update requires": "Some interruptions"
        },
        "SolutionStackName": {
            "title": "SolutionStackName",
            "description": "The name of an Elastic Beanstalk solution stack that this configuration will use. For more information, see Supported Platforms in the AWS Elastic Beanstalk Developer Guide. You must specify either this parameter or an Elastic Beanstalk configuration template name.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "TemplateName": {
            "title": "TemplateName",
            "description": "The name of the Elastic Beanstalk configuration template to use with the environment. You must specify either this parameter or a solution stack name.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "Tier": {
            "title": "Tier",
            "description": "Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.",
            "required": "No",
            "type": "Elastic Beanstalk Environment Tier Property Type",
            "update requires": "See Elastic Beanstalk Environment Tier Property Type"
        },
        "VersionLabel": {
            "title": "VersionLabel",
            "description": "The version to associate with the environment.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        }
    },
    "AWS::ElasticLoadBalancing::LoadBalancer": {
        "AccessLoggingPolicy": {
            "title": "AccessLoggingPolicy",
            "description": "Captures detailed information for all requests made to your load balancer, such as the time a request was received, client’s IP address, latencies, request path, and server responses.",
            "required": "No",
            "type": "Elastic Load Balancing AccessLoggingPolicy",
            "update requires": "No interruption"
        },
        "AppCookieStickinessPolicy": {
            "title": "AppCookieStickinessPolicy",
            "description": "Generates one or more stickiness policies with sticky session lifetimes that follow that of an application-generated cookie. These policies can be associated only with HTTP/HTTPS listeners.",
            "required": "No",
            "type": "A list of AppCookieStickinessPolicy objects.",
            "update requires": "No interruption"
        },
        "AvailabilityZones": {
            "title": "AvailabilityZones",
            "description": "The Availability Zones in which to create the load balancer. You can specify either AvailabilityZones or Subnets, but not both.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "Replacement if you did not have an Availability Zone specified and you are adding one or if you are removing all Availability Zones. Otherwise, update requires no interruption."
        },
        "ConnectionDrainingPolicy": {
            "title": "ConnectionDrainingPolicy",
            "description": "Whether deregistered or unhealthy instances can complete all in-flight requests.",
            "required": "No",
            "type": "Elastic Load Balancing ConnectionDrainingPolicy",
            "update requires": "No interruption"
        },
        "ConnectionSettings": {
            "title": "ConnectionSettings",
            "description": "Specifies how long front-end and back-end connections of your load balancer can remain idle.",
            "required": "No",
            "type": "Elastic Load Balancing ConnectionSettings",
            "update requires": "No interruption"
        },
        "CrossZone": {
            "title": "CrossZone",
            "description": "Whether cross-zone load balancing is enabled for the load balancer. With cross-zone load balancing, your load balancer nodes route traffic to the back-end instances across all Availability Zones. By default the CrossZone property is false.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "HealthCheck": {
            "title": "HealthCheck",
            "description": "Application health check for the instances.",
            "required": "No",
            "type": "ElasticLoadBalancing HealthCheck Type.",
            "update requires": "Replacement if you did not have a health check specified and you are adding one or if you are removing a health check. Otherwise, update requires no interruption."
        },
        "Instances": {
            "title": "Instances",
            "description": "A list of EC2 instance IDs for the load balancer.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "LBCookieStickinessPolicy": {
            "title": "LBCookieStickinessPolicy",
            "description": "Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent), or by a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.",
            "required": "No",
            "type": "A list of LBCookieStickinessPolicy objects.",
            "update requires": "No interruption"
        },
        "LoadBalancerName": {
            "title": "LoadBalancerName",
            "description": "A name for the load balancer. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the load balancer. The name must be unique within your set of load balancers. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Listeners": {
            "title": "Listeners",
            "description": "One or more listeners for this load balancer. Each listener must be registered for a specific port, and you cannot have more than one listener for a given port.",
            "description-note": "ImportantIf you update the property values for a listener specified by the Listeners property, AWS CloudFormation will delete the existing listener and create a new one with the updated properties. During the time that AWS CloudFormation is performing this action, clients will not be able to connect to the load balancer.",
            "required": "Yes",
            "type": "A list of ElasticLoadBalancing Listener Property Type objects.",
            "update requires": "No interruption"
        },
        "Policies": {
            "title": "Policies",
            "description": "A list of elastic load balancing policies to apply to this elastic load balancer.",
            "required": "No",
            "type": "A list of ElasticLoadBalancing policy objects.",
            "update requires": "No interruption"
        },
        "Scheme": {
            "title": "Scheme",
            "description": "For load balancers attached to an Amazon VPC, this parameter can be used to specify the type of load balancer to use. Specify internal to create an internal load balancer with a DNS name that resolves to private IP addresses or internet-facing to create a load balancer with a publicly resolvable DNS name, which resolves to public IP addresses.",
            "description-extra": "  ",
            "description-note": "NoteIf you specify internal, you must specify subnets to associate with the load balancer, not Availability Zones.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "SecurityGroups": {
            "title": "SecurityGroups",
            "description": "Required: No",
            "type": "A list of security groups assigned to your load balancer within your virtual private cloud (VPC).",
            "update requires": "No interruption"
        },
        "Subnets": {
            "title": "Subnets",
            "description": "A list of subnet IDs in your virtual private cloud (VPC) to attach to your load balancer. You can specify either AvailabilityZones or Subnets, but not both.",
            "description-extra": "For more information about using Elastic Load Balancing in a VPC, see How Do I Use Elastic Load Balancing in Amazon VPC in the Elastic Load Balancing Developer Guide.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "Replacement if you did not have an subnet specified and you are adding one or if you are removing all subnets. Otherwise, update requires no interruption."
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key-value pairs) for this load balancer.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption"
        }
    },
    "AWS::IAM::AccessKey": {
        "Serial": {
            "title": "Serial",
            "description": "This value is specific to AWS CloudFormation and can only be incremented. Incrementing this value notifies AWS CloudFormation that you want to rotate your access key. When you update your stack, AWS CloudFormation will replace the existing access key with a new key.",
            "required": "No",
            "type": "Integer",
            "update requires": "Replacement"
        },
        "Status": {
            "title": "Status",
            "description": "The status of the access key.",
            "required": "Yes",
            "type": "String",
            "description-extra": "Valid values: \"Active\" or \"Inactive\"",
            "update requires": "No interruption"
        },
        "UserName": {
            "title": "UserName",
            "description": "The name of the user that the new key will belong to.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::IAM::Group": {
        "Path": {
            "title": "Path",
            "description": "The path to the group. For more information about paths, see Identifiers for IAM Entities in Using IAM.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Policies": {
            "title": "Policies",
            "description": "The policies to associate with this group. For information about policies, see Overview of Policies in Using IAM.",
            "required": "No",
            "type": "List of IAM Policies",
            "update requires": "No interruption"
        }
    },
    "AWS::IAM::InstanceProfile": {
        "Path": {
            "title": "Path",
            "description": "The path associated with this IAM instance profile. For information about IAM paths, see Friendly Names and Paths in the AWS Identity and Access Management User Guide.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Roles": {
            "title": "Roles",
            "description": "The roles associated with this IAM instance profile.",
            "required": "Yes",
            "type": "List of references to AWS::IAM::Roles. Currently, a maximum of one role can be assigned to an instance profile.",
            "update requires": "No interruption"
        }
    },
    "AWS::IAM::Policy": {
        "Groups": {
            "title": "Groups",
            "description": "The names of groups to which you want to add the policy.",
            "required": "Conditional",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "PolicyDocument": {
            "title": "PolicyDocument",
            "description": "A policy document that contains permissions to add to the specified users or groups.",
            "required": "Yes",
            "type": "JSON object",
            "update requires": "No interruption"
        },
        "PolicyName": {
            "title": "PolicyName",
            "description": "The name of the policy.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Roles": {
            "title": "Roles",
            "description": "The names of AWS::IAM::Roles to attach to this policy.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "Users": {
            "title": "Users",
            "description": "The names of users for whom you want to add the policy.",
            "required": "Conditional",
            "type": "A list of strings",
            "update requires": "No interruption"
        }
    },
    "AWS::IAM::Role": {
        "AssumeRolePolicyDocument": {
            "title": "AssumeRolePolicyDocument",
            "description": "The IAM assume role policy that is associated with this role.",
            "required": "Yes",
            "type": "A JSON policy document.",
            "update requires": "No interruption",
            "update-note": "NoteYou can associate only one assume role policy with a role. For an example of an assume role policy, see Template Examples."
        },
        "Path": {
            "title": "Path",
            "description": "The path associated with this role. For information about IAM paths, see Friendly Names and Paths in Using IAM.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Policies": {
            "title": "Policies",
            "description": "The policies to associate with this role. Policies can also be specified externally. For sample templates that demonstrates both embedded and external policies, see Template Examples.",
            "required": "No",
            "type": "List of IAM Policies",
            "update requires": "No interruption"
        }
    },
    "AWS::IAM::User": {
        "Path": {
            "title": "Path",
            "description": "The path for the user name. For more information about paths, see Identifiers for IAM Entities in Using AWS Identity and Access Management.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Groups": {
            "title": "Groups",
            "description": "A name of a group to which you want to add the user.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "LoginProfile": {
            "title": "LoginProfile",
            "description": "Creates a login profile for the user so the user can access AWS services such as the AWS Management Console.",
            "description-extra": "The LoginProfile type is an embedded property in the AWS::IAM::User type. The LoginProfile property contains a single field: Password, which takes a string as its value. For example:",
            "description-example": "\"LoginProfile\": { \"Password\": \"myP@ssW0rd\" }",
            "required": "No",
            "type": "LoginProfile type",
            "update requires": "No interruption"
        },
        "Policies": {
            "title": "Policies",
            "description": "The policies to associate with this user. For information about policies, see Overview of Policies in [Using IAM].",
            "required": "No",
            "type": "List of IAM Policies",
            "update requires": "No interruption"
        }
    },
    "AWS::IAM::UserToGroupAddition": {
        "GroupName": {
            "title": "GroupName",
            "description": "The name of group to add users to.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Users": {
            "title": "Users",
            "description": "Required: Yes",
            "type": "List of users",
            "update requires": "No interruption"
        }
    },
    "AWS::Kinesis::Stream": {
        "ShardCount": {
            "title": "ShardCount",
            "description": "The number of shards that the stream uses. For greater provisioned throughput, increase the number of shards.",
            "required": "Yes",
            "type": "Integer",
            "update requires": "Replacement"
        }
    },
    "AWS::Logs::LogGroup": {
        "RetentionInDays": {
            "title": "RetentionInDays",
            "description": "The number of days log events are kept in CloudWatch Logs. When a log event expires, CloudWatch Logs automatically deletes it. For valid values, see PutRetentionPolicy in the Amazon CloudWatch Logs API Reference.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        }
    },
    "AWS::Logs::MetricFilter": {
        "FilterPattern": {
            "title": "FilterPattern",
            "description": "Describes the pattern that CloudWatch Logs follows to interpret each entry in a log. For example, a log entry might contain fields such as timestamps, IP addresses, error codes, bytes transferred, and so on. You use the pattern to specify those fields and to specify what to look for in the log file. For example, if you're interested in error codes that begin with 1234, your filter pattern might be [timestamps, ip_addresses, error_codes = 1234*, size, ...].",
            "required": "Yes",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "LogGroupName": {
            "title": "LogGroupName",
            "description": "The name of an existing log group that you want to associate with this metric filter.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "MetricTransformations": {
            "title": "MetricTransformations",
            "description": "Describes how to transform data from a log into a CloudWatch metric.",
            "required": "Yes",
            "type": "A list of CloudWatch Logs MetricFilter MetricTransformation Property",
            "type-note": "ImportantCurrently, you can specify only one metric transformation for each metric filter. If you want to specify multiple metric transformations, you must specify multiple metric filters.",
            "update requires": "No interruption"
        }
    },
    "AWS::OpsWorks::App": {
        "AppSource": {
            "title": "AppSource",
            "description": "Contains the information required to retrieve an app from a repository.",
            "required": "No",
            "type": "AWS OpsWorks Source Type",
            "update requires": "No interruption"
        },
        "Attributes": {
            "title": "Attributes",
            "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
            "required": "No",
            "type": "A list of key-value pairs",
            "update requires": "No interruption"
        },
        "Description": {
            "title": "Description",
            "description": "A description of the app.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Domains": {
            "title": "Domains",
            "description": "The app virtual host settings, with multiple domains separated by commas. For example, 'www.example.com, example.com'.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "EnableSsl": {
            "title": "EnableSsl",
            "description": "Whether to enable SSL for this app.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "Name": {
            "title": "Name",
            "description": "The AWS OpsWorks app name.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Shortname": {
            "title": "Shortname",
            "description": "The app short name, which is used internally by AWS OpsWorks and by Chef recipes.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "SslConfiguration": {
            "title": "SslConfiguration",
            "description": "The SSL configuration",
            "required": "No",
            "type": "AWS OpsWorks SslConfiguration Type",
            "update requires": "No interruption"
        },
        "StackId": {
            "title": "StackId",
            "description": "The AWS OpsWorks stack ID that this app will be associated with.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Type": {
            "title": "Type",
            "description": "The app type. Each supported type is associated with a particular layer. For more information, see CreateApp in the AWS OpsWorks API Reference.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
        "ElasticLoadBalancerName": {
            "title": "ElasticLoadBalancerName",
            "description": "Elastic Load Balancing load balancer name.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "LayerId": {
            "title": "LayerId",
            "description": "The AWS OpsWorks layer ID that the Elastic Load Balancing load balancer will be attached to.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::OpsWorks::Instance": {
        "AmiId": {
            "title": "AmiId",
            "description": "The ID of the custom AMI to be used to create the instance. The AMI should be based on one of the standard AWS OpsWorks APIs.",
            "required": "No",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Architecture": {
            "title": "Architecture",
            "description": "The instance architecture.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "AvailabilityZone": {
            "title": "AvailabilityZone",
            "description": "The instance Availability Zone.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "InstallUpdatesOnBoot": {
            "title": "InstallUpdatesOnBoot",
            "description": "Whether to install operating system and package updates when the instance boots.",
            "required": "No",
            "type": "Boolean",
            "update requires": "Some interruptions"
        },
        "InstanceType": {
            "title": "InstanceType",
            "description": "The instance type, which must be supported by AWS OpsWorks. For more information, see CreateInstance in the AWS OpsWorks API Reference.",
            "required": "Yes",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "LayerIds": {
            "title": "LayerIds",
            "description": "The IDs of the AWS OpsWorks layers that will be associated with this instance.",
            "required": "Yes",
            "type": "A list of strings",
            "update requires": "Some interruptions"
        },
        "Os": {
            "title": "Os",
            "description": "The instance operating system. For more information, see CreateInstance in the AWS OpsWorks API Reference.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "RootDeviceType": {
            "title": "RootDeviceType",
            "description": "The instance root device type.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "SshKeyName": {
            "title": "SshKeyName",
            "description": "The instance SSH key name.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "StackId": {
            "title": "StackId",
            "description": "The ID of the AWS OpsWorks stack that this instance will be associated with.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "SubnetId": {
            "title": "SubnetId",
            "description": "The ID of the instance's subnet. If the stack is running in a VPC, you can use this parameter to override the stack's default subnet ID value and direct AWS OpsWorks to launch the instance in a different subnet. ",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::OpsWorks::Layer": {
        "Attributes": {
            "title": "Attributes",
            "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
            "required": "No",
            "type": "A list of key-value pairs",
            "update requires": "No interruption"
        },
        "AutoAssignElasticIps": {
            "title": "AutoAssignElasticIps",
            "description": "Whether to automatically assign an Elastic IP address to Amazon EC2 instances in this layer.",
            "required": "Yes",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "AutoAssignPublicIps": {
            "title": "AutoAssignPublicIps",
            "description": "For AWS OpsWorks stacks that are running in a VPC, whether to automatically assign a public IP address to Amazon EC2 instances in this layer.",
            "required": "Yes",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "CustomInstanceProfileArn": {
            "title": "CustomInstanceProfileArn",
            "description": "The Amazon Resource Name (ARN) of an IAM instance profile that is to be used for the Amazon EC2 instances in this layer.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "CustomRecipes": {
            "title": "CustomRecipes",
            "description": "Custom event recipes for this layer.",
            "required": "No",
            "type": "AWS OpsWorks Recipes Type",
            "update requires": "No interruption"
        },
        "CustomSecurityGroupIds": {
            "title": "CustomSecurityGroupIds",
            "description": "Custom security group IDs for this layer.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "EnableAutoHealing": {
            "title": "EnableAutoHealing",
            "description": "Whether to automatically heal Amazon EC2 instances that have become disconnected or timed out.",
            "required": "Yes",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "InstallUpdatesOnBoot": {
            "title": "InstallUpdatesOnBoot",
            "description": "Whether to install operating system and package updates when the instance boots.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "Name": {
            "title": "Name",
            "description": "The AWS OpsWorks layer name.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Packages": {
            "title": "Packages",
            "description": "The packages for this layer.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "Shortname": {
            "title": "Shortname",
            "description": "The layer short name, which is used internally by AWS OpsWorks and by Chef recipes. The short name is also used as the name for the directory where your app files are installed. ",
            "description-extra": "The name can have a maximum of 200 characters, which are limited to the alphanumeric characters, '-', '_', and '.'.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "StackId": {
            "title": "StackId",
            "description": "The ID of the AWS OpsWorks stack that this layer will be associated with.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Type": {
            "title": "Type",
            "description": "The layer type. A stack cannot have more than one layer of the same type. For more information, see CreateLayer in the AWS OpsWorks API Reference.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "VolumeConfigurations": {
            "title": "VolumeConfigurations",
            "description": "Describes the Amazon EBS volumes for this layer.",
            "required": "No",
            "type": "AWS OpsWorks VolumeConfiguration Type",
            "update requires": "No interruption"
        }
    },
    "AWS::OpsWorks::Stack": {
        "Attributes": {
            "title": "Attributes",
            "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
            "required": "No",
            "type": "A list of key-value pairs",
            "update requires": "No interruption"
        },
        "ChefConfiguration": {
            "title": "ChefConfiguration",
            "description": "Describes the Chef configuration. For more information, see the CreateStack ChefConfiguration parameter in the AWS OpsWorks API Reference.",
            "description-note": "NoteTo enable Berkshelf, you must select a Chef version in the ConfigurationManager property that supports Berkshelf.",
            "required": "No",
            "type": "AWS OpsWorks ChefConfiguration Type",
            "update requires": "No interruption"
        },
        "ConfigurationManager": {
            "title": "ConfigurationManager",
            "description": "Describes the configuration manager. When you create a stack, you use the configuration manager to specify the Chef version. For supported Chef versions, see the CreateStack ConfigurationManager parameter in the AWS OpsWorks API Reference.",
            "required": "No",
            "type": "AWS OpsWorks StackConfigurationManager Type",
            "update requires": "No interruption"
        },
        "CustomCookbooksSource": {
            "title": "CustomCookbooksSource",
            "description": "Contains the information required to retrieve a cookbook from a repository.",
            "required": "No",
            "type": "AWS OpsWorks Source Type",
            "update requires": "No interruption"
        },
        "CustomJson": {
            "title": "CustomJson",
            "description": "A string that contains user-defined custom JSON. The custom JSON is used to override the corresponding default stack configuration JSON values. For more information, see CreateStack in the AWS OpsWorks API Reference.",
            "description-note": "ImportantAWS CloudFormation submits all JSON attributes as strings, including any Boolean or number attributes. If you have recipes that expect booleans or numbers, you must modify the recipes to accept strings and to interpret those strings as booleans or numbers.",
            "required": "No",
            "type": "JSON object",
            "update requires": "No interruption"
        },
        "DefaultAvailabilityZone": {
            "title": "DefaultAvailabilityZone",
            "description": "The stack's default Availability Zone, which must be in the specified region.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "DefaultInstanceProfileArn": {
            "title": "DefaultInstanceProfileArn",
            "description": "The Amazon Resource Name (ARN) of an IAM instance profile that is the default profile for all of the stack's Amazon EC2 instances.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "DefaultOs": {
            "title": "DefaultOs",
            "description": "The stack's default operating system. For more information, see CreateStack in the AWS OpsWorks API Reference.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "DefaultRootDeviceType": {
            "title": "DefaultRootDeviceType",
            "description": "The default root device type. This value is used by default for all instances in the stack, but you can override it when you create an instance. For more information, see CreateStack in the AWS OpsWorks API Reference.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "DefaultSshKeyName": {
            "title": "DefaultSshKeyName",
            "description": "A default SSH key for the stack instances. You can override this value when you create or update an instance.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "DefaultSubnetId": {
            "title": "DefaultSubnetId",
            "description": "The stack's default subnet ID. All instances are launched into this subnet unless you specify another subnet ID when you create the instance.",
            "required": "Conditional. If you specify the VpcId property, you must specify this property.",
            "type": "String",
            "update requires": "No interruption"
        },
        "HostnameTheme": {
            "title": "HostnameTheme",
            "description": "The stack's host name theme, with spaces replaced by underscores. The theme is used to generate host names for the stack's instances. For more information, see CreateStack in the AWS OpsWorks API Reference.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Name": {
            "title": "Name",
            "description": "The name of the AWS OpsWorks stack.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "ServiceRoleArn": {
            "title": "ServiceRoleArn",
            "description": "The AWS Identity and Access Management (IAM) role that AWS OpsWorks uses to work with AWS resources on your behalf. You must specify an Amazon Resource Name (ARN) for an existing IAM role.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "UseCustomCookbooks": {
            "title": "UseCustomCookbooks",
            "description": "Whether the stack uses custom cookbooks.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "UseOpsworksSecurityGroups": {
            "title": "UseOpsworksSecurityGroups",
            "description": "Whether to associate the AWS OpsWorks built-in security groups with the stack's layers.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "VpcId": {
            "title": "VpcId",
            "description": "The ID of the VPC that the stack is to be launched into, which must be in the specified region. All instances are launched into this VPC. If you specify this property, you must specify the DefaultSubnetId property.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::Redshift::Cluster": {
        "AllowVersionUpgrade": {
            "title": "AllowVersionUpgrade",
            "description": "When a new version of the Amazon Redshift is released, indicates whether upgrades can be applied to the engine that is running on the cluster. The upgrades are applied during the maintenance window.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "AutomatedSnapshotRetentionPeriod": {
            "title": "AutomatedSnapshotRetentionPeriod",
            "description": "The number of days that automated snapshots are retained. If you set the value to 0, automated snapshots are disabled.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "AvailabilityZone": {
            "title": "AvailabilityZone",
            "description": "The Amazon EC2 Availability Zone in which you want to provision your Amazon Redshift cluster. For example, if you have several Amazon EC2 instances running in a specific Availability Zone, you might want the cluster to be provisioned in the same zone in order to decrease network latency.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "ClusterParameterGroupName": {
            "title": "ClusterParameterGroupName",
            "description": "The name of the parameter group that you want to associate with this cluster.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "ClusterSecurityGroups": {
            "title": "ClusterSecurityGroups",
            "description": "A list of security groups that you want to associate with this cluster.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "ClusterSubnetGroupName": {
            "title": "ClusterSubnetGroupName",
            "description": "The name of a cluster subnet group that you want to associate with this cluster.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "ClusterType": {
            "title": "ClusterType",
            "description": "The type of cluster. You can specify single-node or multi-node.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "ClusterVersion": {
            "title": "ClusterVersion",
            "description": "The Amazon Redshift engine version that you want to deploy on the cluster.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "DBName": {
            "title": "DBName",
            "description": "The name of the first database that is created when the cluster is created.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "ElasticIp": {
            "title": "ElasticIp",
            "description": "The Elastic IP (EIP) address for the cluster.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Encrypted": {
            "title": "Encrypted",
            "description": "Indicates whether the data in the cluster is encrypted at rest.",
            "required": "No",
            "type": "Boolean",
            "update requires": "Replacement"
        },
        "HsmClientCertificateIdentifier": {
            "title": "HsmClientCertificateIdentifier",
            "description": "Specifies the name of the HSM client certificate that the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "HsmConfigurationIdentifier": {
            "title": "HsmConfigurationIdentifier",
            "description": "Specifies the name of the HSM configuration that contains the information that the Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "MasterUsername": {
            "title": "MasterUsername",
            "description": "The user name that is associated with the master user account for this cluster.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "MasterUserPassword": {
            "title": "MasterUserPassword",
            "description": "The password associated with the master user account for this cluster.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "NodeType": {
            "title": "NodeType",
            "description": "The node type that is provisioned for this cluster.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "NumberOfNodes": {
            "title": "NumberOfNodes",
            "description": "The number of compute nodes in the cluster. If you specify multi-node for the ClusterType parameter, you must specify a number greater than 1.",
            "required": "Conditional",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "OwnerAccount": {
            "title": "OwnerAccount",
            "description": "When you restore from a snapshot from another AWS account, the 12-digit AWS account ID that contains that snapshot.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Port": {
            "title": "Port",
            "description": "The port number on which the cluster accepts incoming connections.",
            "required": "No",
            "type": "Integer",
            "update requires": "Replacement"
        },
        "PreferredMaintenanceWindow": {
            "title": "PreferredMaintenanceWindow",
            "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur. The format of the time range is ddd:hh24:mi-ddd:hh24:mi.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "PubliclyAccessible": {
            "title": "PubliclyAccessible",
            "description": "Indicates whether the cluster can be accessed from a public network.",
            "required": "No",
            "type": "Boolean",
            "update requires": "Replacement"
        },
        "SnapshotClusterIdentifier": {
            "title": "SnapshotClusterIdentifier",
            "description": "The name of the cluster the source snapshot was created from.",
            "required": "Conditional. This property is required if your IAM policy includes a restriction on the cluster name, where the resource element specifies anything other than the wildcard character (*) for the cluster name.",
            "update requires": "Replacement"
        },
        "SnapshotIdentifier": {
            "title": "SnapshotIdentifier",
            "description": "The name of the snapshot from which to create a new cluster.",
            "required": "Conditional. If you specified the SnapshotClusterIdentifier property, you must specify this property.",
            "type": "String",
            "update requires": "Replacement"
        },
        "VpcSecurityGroupIds": {
            "title": "VpcSecurityGroupIds",
            "description": "A list of VPC security groups that are associated with this cluster.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "Endpoint.Address": {
            "title": "Endpoint.Address",
            "description": "The connection endpoint for the Amazon Redshift cluster. For example: examplecluster.cg034hpkmmjt.us-east-1.redshift.amazonaws.com ."
        },
        "Endpoint.Port": {
            "title": "Endpoint.Port",
            "description": "The port number on which the Amazon Redshift cluster accepts connections. For example: 5439."
        }
    },
    "AWS::Redshift::ClusterParameterGroup": {
        "Description": {
            "title": "Description",
            "description": "A description of the parameter group.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "ParameterGroupFamily": {
            "title": "ParameterGroupFamily",
            "description": "The Amazon Redshift engine version that applies to this cluster parameter group. The cluster engine version determines the set of parameters that you can specify in the Parameters property. ",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "Parameters": {
            "title": "Parameters",
            "description": "A list of parameter names and values that are allowed by the Amazon Redshift engine version that you specified in the ParameterGroupFamily property. For more information, see Amazon Redshift Parameter Groups in the Amazon Redshift Cluster Management Guide.",
            "required": "No",
            "type": "Amazon Redshift Parameter Type",
            "update requires": "No interruption"
        }
    },
    "AWS::Redshift::ClusterSecurityGroup": {
        "Description": {
            "title": "Description",
            "description": "A description of the security group.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::Redshift::ClusterSecurityGroupIngress": {
        "ClusterSecurityGroupName": {
            "title": "ClusterSecurityGroupName",
            "description": "The name of the Amazon Redshift security group that will be associated with the ingress rule.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        },
        "CIDRIP": {
            "title": "CIDRIP",
            "description": "The IP address range that has inbound access to the Amazon Redshift security group.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "EC2SecurityGroupName": {
            "title": "EC2SecurityGroupName",
            "description": "The Amazon EC2 security group that will be added the Amazon Redshift security group.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "EC2SecurityGroupOwnerId": {
            "title": "EC2SecurityGroupOwnerId",
            "description": "The 12-digit AWS account number of the owner of the Amazon EC2 security group that is specified by the EC2SecurityGroupName parameter.",
            "required": "Conditional. If you specify the EC2SecurityGroupName property, you must specify this property.",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::Redshift::ClusterSubnetGroup": {
        "Description": {
            "title": "Description",
            "description": "A description of the subnet group.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "SubnetIds": {
            "title": "SubnetIds",
            "description": "A list of VPC subnet IDs. You can modify a maximum of 20 subnets.",
            "required": "Yes",
            "type": "A list of strings",
            "update requires": "No interruption"
        }
    },
    "AWS::RDS::DBInstance": {
        "AllocatedStorage": {
            "title": "AllocatedStorage",
            "description": "The allocated storage size specified in gigabytes (GB).",
            "description-extra": "If any value is used in the Iops parameter, AllocatedStorage must be at least 100 GB, which corresponds to the minimum Iops value of 1000. If Iops is increased (in 1000 IOPS increments), then AllocatedStorage must also be increased (in 100 GB increments) correspondingly.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "AllowMajorVersionUpgrade": {
            "title": "AllowMajorVersionUpgrade",
            "description": "Indicates whether major version upgrades are allowed. Changing this parameter does not result in an outage, and the change is applied asynchronously as soon as possible.",
            "description-extra": "Constraints: This parameter must be set to true when you specify an EngineVersion that differs from the DB instance's current major version.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption"
        },
        "AutoMinorVersionUpgrade": {
            "title": "AutoMinorVersionUpgrade",
            "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. The default value is true.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption or some interruptions. For more information, see ModifyDBInstance in the Amazon Relational Database Service API Reference."
        },
        "AvailabilityZone": {
            "title": "AvailabilityZone",
            "description": "The name of the Availability Zone where the DB instance is located. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "BackupRetentionPeriod": {
            "title": "BackupRetentionPeriod",
            "description": "The number of days for which automatic DB snapshots are retained.",
            "description-note": "ImportantIf this DB instance is deleted or replaced during an update, all automated snapshots are deleted. However, manual DB snapshot are retained.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption or some interruptions. For more information, see ModifyDBInstance in the Amazon Relational Database Service API Reference."
        },
        "DBInstanceClass": {
            "title": "DBInstanceClass",
            "description": "The name of the compute and memory capacity class of the DB instance.",
            "required": "Yes",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "DBInstanceIdentifier": {
            "title": "DBInstanceIdentifier",
            "description": "A name for the DB instance. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "DBName": {
            "title": "DBName",
            "description": "The name of the initial database of this instance that was provided at create time, if one was specified. This same name is returned for the life of the DB instance.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "DBParameterGroupName": {
            "title": "DBParameterGroupName",
            "description": "The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption or some interruptions. For more information, see ModifyDBInstance in the Amazon Relational Database Service API Reference. Also, if any of the data members of the referenced parameter group are changed during an update, the database instance may need to be restarted, causing some interruption."
        },
        "DBSecurityGroups": {
            "title": "DBSecurityGroups",
            "description": "A list of the DB security groups to assign to the Amazon RDS instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.",
            "description-extra": "If you set DBSecurityGroups, you must not set VPCSecurityGroups, and vice-versa.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "DBSnapshotIdentifier": {
            "title": "DBSnapshotIdentifier",
            "description": "The identifier for the DB snapshot to restore from.",
            "description-extra": "By specifying this property, you can create a DB instance from the specified DB snapshot. If the DBSnapshotIdentifier property is an empty string or the AWS::RDS::DBInstance declaration has no DBSnapshotIdentifier property, the database is created as a new database. If the property contains a value (other than empty string), AWS CloudFormation creates a database from the specified snapshot. If a snapshot with the specified name does not exist, the database creation fails and the stack rolls back.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "DBSubnetGroupName": {
            "title": "DBSubnetGroupName",
            "description": "A DB subnet group to associate with the DB instance.",
            "description-extra": "If there is no DB subnet group, then it is a non-VPC DB instance.For more information about using Amazon RDS in a VPC, go to Using Amazon RDS with Amazon Virtual Private Cloud (VPC) in the Amazon Relational Database Service Developer Guide.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "Engine": {
            "title": "Engine",
            "description": "The name of the database engine that the DB instance uses. This property is optional when you specify the DBSnapshotIdentifier property to create DB instances.",
            "description-extra": "For valid values, see the Engine parameter of the CreateDBInstance action in the Amazon Relational Database Service API Reference.",
            "required": "Conditional",
            "type": "String",
            "update requires": "Replacement"
        },
        "EngineVersion": {
            "title": "EngineVersion",
            "description": "The version number of the database engine to use.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "Iops": {
            "title": "Iops",
            "description": "The number of I/O operations per second (IOPS) that the database should provision. This can be any integer value from 1000 to 10,000, in 1000 IOPS increments.",
            "description-extra": "If any value is used in the Iops parameter, AllocatedStorage must be at least 100 GB, which corresponds to the minimum Iops value of 1000. If Iops is increased (in 1000 IOPS increments), then AllocatedStorage must also be increased (in 100 GB increments) correspondingly.For more information about this parameter, see Provisioned IOPS Storage in the Amazon Relational Database Service User Guide.",
            "required": "Conditional. If you specify io1 for the StorageType property, you must specify this property.",
            "type": "Number",
            "update requires": "No interruption"
        },
        "LicenseModel": {
            "title": "LicenseModel",
            "description": "The license model information for the DB instance.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement."
        },
        "MasterUsername": {
            "title": "MasterUsername",
            "description": "The master user name for the database instance. This property is optional when you specify the DBSnapshotIdentifier property to create DB instances.",
            "description-note": "NoteIf you specify the SourceDBInstanceIdentifier property, do not specify this property. The database attributes are inherited from the source database instance.",
            "required": "Conditional",
            "type": "String",
            "update requires": "Replacement."
        },
        "MasterUserPassword": {
            "title": "MasterUserPassword",
            "description": "The master password for the database instance. This property is optional when you specify the DBSnapshotIdentifier property to create DB instances.",
            "description-note": "NoteIf you specify the SourceDBInstanceIdentifier property, do not specify this property. The database attributes are inherited from the source database instance.",
            "required": "Conditional",
            "type": "String",
            "update requires": "No interruption."
        },
        "MultiAZ": {
            "title": "MultiAZ",
            "description": "Specifies if the DB instance is a multiple Availability Zone deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
            "required": "No",
            "type": "Boolean",
            "update requires": "No interruption."
        },
        "OptionGroupName": {
            "title": "OptionGroupName",
            "description": "An option group that this database instance is associated with.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption."
        },
        "Port": {
            "title": "Port",
            "description": "The port for the instance.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement."
        },
        "PreferredBackupWindow": {
            "title": "PreferredBackupWindow",
            "description": "The daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption."
        },
        "PreferredMaintenanceWindow": {
            "title": "PreferredMaintenanceWindow",
            "description": "The weekly time range (in UTC) during which system maintenance can occur.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption or some interruptions. For more information, see ModifyDBInstance in the Amazon Relational Database Service API Reference."
        },
        "PubliclyAccessible": {
            "title": "PubliclyAccessible",
            "description": "Indicates whether the database instance is an Internet-facing instance. If you specify true, an instance is created with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, an internal instance is created with a DNS name that resolves to a private IP address. ",
            "description-extra": "The default behavior value depends on your VPC setup and the database subnet group. For more information, see the PubliclyAccessible parameter in CreateDBInstance in the Amazon Relational Database Service API Reference.",
            "required": "No",
            "type": "Boolean",
            "update requires": "Replacement."
        },
        "SourceDBInstanceIdentifier": {
            "title": "SourceDBInstanceIdentifier",
            "description": "If you want to create a read replica DB instance, specify the ID of the source database instance. Each database instance can have a certain number of read replicas. For more information, see Working with Read Replicas in the Amazon Relational Database Service Developer Guide.",
            "description-extra": "The SourceDBInstanceIdentifier property determines whether a database instance is a read replica. If you remove the SourceDBInstanceIdentifier property from your current template and then update your stack, the read replica is deleted and a new database instance (not a read replica) is created.",
            "description-note": "ImportantNote the following:Read replicas do not support deletion policies. Any deletion policy that's associated with a read replica is ignored.You must create read replicas that are in the same region as the source database instance. Currently, cross-region replicas are not supported.If you specify SourceDBInstanceIdentifier, do not set the MultiAZ property to true and do not specify the DBSnapshotIdentifier property. You cannot deploy read replicas in multiple Availability Zones, and you cannot create a read replica from a snapshot.Do not set the BackupRetentionPeriod, DBName, MasterUsername, MasterUserPassword, and PreferredBackupWindow properties. The database attributes are inherited from the source database instance, and backups are disabled for read replicas.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement."
        },
        "StorageType": {
            "title": "StorageType",
            "description": "The storage type associated with this database instance.",
            "description-extra": "For the default and valid values, see the StorageType parameter of the CreateDBInstance action in the Amazon Relational Database Service API Reference.",
            "description-note": "NoteCurrently, if you specify DBSecurityGroups, StorageType is ignored. If you want to specify a security group and a storage type, you must use a VPC security group. For more information about Amazon RDS and VPC, see Using Amazon RDS with Amazon VPC in the Amazon Relational Database Service User Guide.",
            "required": "No",
            "type": "String",
            "update requires": "Some interruptions"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key–value pairs) for this database instance.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption."
        },
        "VPCSecurityGroups": {
            "title": "VPCSecurityGroups",
            "description": "A list of the VPC security groups to assign to the Amazon RDS instance. The list can include both the physical IDs of existing VPC security groups or references to AWS::EC2::SecurityGroup resources created in the template.",
            "description-extra": "If you set VPCSecurityGroups, you must not set DBSecurityGroups, and vice-versa.",
            "description-note": "ImportantYou can migrate a database instance in your stack from an RDS DB security group to a VPC security group, but you should keep the following points in mind:You cannot revert to using an RDS security group once you have established a VPC security group membership.When you migrate your DB instance to VPC security groups, if your stack update rolls back because of another failure in the database instance update, or because of an update failure in another AWS CloudFormation resource, the rollback will fail because it cannot revert to an RDS security group.To avoid this situation, only migrate your DB instance to using VPC security groups when that is the only change in your stack template.",
            "required": "No",
            "type": "A list of strings",
            "update requires": "No interruption."
        }
    },
    "AWS::RDS::DBParameterGroup": {
        "Description": {
            "title": "Description",
            "description": "A friendly description of the RDS parameter group. For example, \"My Parameter Group\".",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Family": {
            "title": "Family",
            "description": "The database family of this RDS parameter group. For example, \"MySQL5.1\".",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Parameters": {
            "title": "Parameters",
            "description": "The parameters to set for this RDS parameter group.",
            "required": "No",
            "type": "DBParameters, a JSON object consisting of key/value pairs of Strings. For example:",
            "description-example": "\"Parameters\" : { \"Key1\" : \"Value1\", \"Key2\" : \"Value2\", \"Key3\" : \"Value3\"} ",
            "update requires": "No interruption"
        },
        "Tags": {
            "title": "Tags",
            "description": "The tags that you want to attach to the RDS parameter group.",
            "required": "No",
            "type": "A list of resource tags.",
            "update requires": "No interruption"
        }
    },
    "AWS::RDS::DBSubnetGroup": {
        "DBSubnetGroupDescription": {
            "title": "DBSubnetGroupDescription",
            "description": "The description for the DB Subnet Group.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "SubnetIds": {
            "title": "SubnetIds",
            "description": "The EC2 Subnet IDs for the DB Subnet Group.",
            "required": "Yes",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "Tags": {
            "title": "Tags",
            "description": "The tags that you want to attach to the RDS database subnet group.",
            "required": "No",
            "type": "A list of resource tags.",
            "update requires": "No interruption"
        }
    },
    "AWS::RDS::DBSecurityGroup": {
        "EC2VpcId": {
            "title": "EC2VpcId",
            "description": "The Id of VPC. Indicates which VPC this DB Security Group should belong to.",
            "type": "String",
            "required": "Conditional. Must be specified to create a DB Security Group for a VPC; may not be specified otherwise.",
            "update requires": "Replacement"
        },
        "DBSecurityGroupIngress": {
            "title": "DBSecurityGroupIngress",
            "description": "Network ingress authorization for an Amazon EC2 security group or an IP address range.",
            "type": "List of RDS Security Group Rules.",
            "required": "Yes",
            "update requires": "No interruption"
        },
        "GroupDescription": {
            "title": "GroupDescription",
            "description": "Description of the security group.",
            "type": "String",
            "required": "Yes",
            "update requires": "Replacement"
        },
        "Tags": {
            "title": "Tags",
            "description": "The tags that you want to attach to the Amazon RDS DB security group.",
            "required": "No",
            "type": "A list of resource tags.",
            "update requires": "No interruption"
        }
    },
    "AWS::RDS::DBSecurityGroupIngress": {
        "CIDRIP": {
            "title": "CIDRIP",
            "description": "The IP range to authorize.",
            "description-extra": "For an overview of CIDR ranges, go to the Wikipedia Tutorial.",
            "type": "String",
            "update requires": "No interruption"
        },
        "DBSecurityGroupName": {
            "title": "DBSecurityGroupName",
            "description": "The name (ARN) of the AWS::RDS::DBSecurityGroup to which this ingress will be added.",
            "type": "String",
            "required": "Yes",
            "update requires": "No interruption"
        },
        "EC2SecurityGroupId": {
            "title": "EC2SecurityGroupId",
            "description": "The ID of the VPC or EC2 security group to authorize.",
            "description-extra": "For VPC DB security groups, use EC2SecurityGroupId. For EC2 security groups, use EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId.",
            "type": "String",
            "required": "No",
            "update requires": "No interruption"
        },
        "EC2SecurityGroupName": {
            "title": "EC2SecurityGroupName",
            "description": "The name of the EC2 security group to authorize.",
            "description-extra": "For VPC DB security groups, use EC2SecurityGroupId. For EC2 security groups, use EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId.",
            "type": "String",
            "required": "No",
            "update requires": "No interruption"
        },
        "EC2SecurityGroupOwnerId": {
            "title": "EC2SecurityGroupOwnerId",
            "description": "The AWS Account Number of the owner of the EC2 security group specified in the EC2SecurityGroupName parameter. The AWS Access Key ID is not an acceptable value.",
            "description-extra": "For VPC DB security groups, use EC2SecurityGroupId. For EC2 security groups, use EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId.",
            "type": "String",
            "required": "No",
            "update requires": "No interruption"
        }
    },
    "AWS::Route53::HealthCheck": {
        "HealthCheckConfig": {
            "title": "HealthCheckConfig",
            "description": "An Amazon Route 53 health check.",
            "required": "Yes",
            "type": "Amazon Route 53 HealthCheck Configuration",
            "update requires": "No interruption"
        }
    },
    "AWS::Route53::HostedZone": {
        "HostedZoneConfig": {
            "title": "HostedZoneConfig",
            "description": "A complex type that contains an optional comment about your hosted zone.",
            "required": "No",
            "type": "Amazon Route 53 Hosted Zone Configuration Property",
            "update requires": "Replacement"
        },
        "Name": {
            "title": "Name",
            "description": "The name of the domain. For resource record types that include a domain name, specify a fully qualified domain name.",
            "required": "Yes",
            "type": "String",
            "update requires": "Replacement"
        }
    },
    "AWS::Route53::RecordSet": {
        "AliasTarget": {
            "title": "AliasTarget",
            "description": "Alias resource record sets only: Information about the domain to which you are redirecting traffic.",
            "description-extra": "If you specify this property, do not specify the TTL property. The alias uses a TTL value from the alias target record.For more information about alias resource record sets, see Creating Alias Resource Record Sets in the Amazon Route 53 Developer Guide and POST ChangeResourceRecordSets in the Amazon Route 53 API reference.",
            "required": "Conditional. Required if you are creating an alias resource record set. ",
            "type": "AliasTarget",
            "update requires": "No interruption"
        },
        "Comment": {
            "title": "Comment",
            "description": "Any comments you want to include about the hosted zone.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Failover": {
            "title": "Failover",
            "description": "Designates the record set as a PRIMARY or SECONDARY failover record set. When you have more than one resource performing the same function, you can configure Amazon Route 53 to check the health of your resources and use only health resources to respond to DNS queries. You cannot create nonfailover resource record sets that have the same Name and Type property values as failover resource record sets. For more information, see the Failover element in the Amazon Route 53 API Reference.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "GeoLocation": {
            "title": "GeoLocation",
            "description": "Describes how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.",
            "required": "No",
            "type": "Amazon Route 53 Record Set GeoLocation Property",
            "update requires": "No interruption"
        },
        "HealthCheckId": {
            "title": "HealthCheckId",
            "description": "The health check ID that you want to apply to this record set. Amazon Route 53 returns this resource record set in response to a DNS query only while record set is healthy.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "HostedZoneId": {
            "title": "HostedZoneId",
            "description": "The ID of the hosted zone.",
            "required": "Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
            "type": "String",
            "update requires": "Replacement"
        },
        "HostedZoneName": {
            "title": "HostedZoneName",
            "description": "The name of the domain for the hosted zone where you want to add the record set.",
            "description-extra": "When you create a stack using an AWS::Route53::RecordSet that specifies HostedZoneName, AWS CloudFormation attempts to find a hosted zone whose name matches the HostedZoneName. If AWS CloudFormation cannot find a hosted zone with a matching domain name, or if there is more than one hosted zone with the specified domain name, AWS CloudFormation will not create the stack.If you have multiple hosted zones with the same domain name, you must explicitly specify the hosted zone using HostedZoneId.",
            "required": "Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
            "type": "String",
            "update requires": "Replacement"
        },
        "Name": {
            "title": "Name",
            "description": "The name of the domain. This must be a fully specified domain, ending with a period as the last label indication. If you omit the final period, Amazon Route 53 assumes the domain is relative to the root.",
            "required": "Yes",
            "type": "String",
            "update requires": "No interruption"
        },
        "Region": {
            "title": "Region",
            "description": "Latency resource record sets only: The Amazon EC2 region where the resource that is specified in this resource record set resides. The resource typically is an AWS resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.",
            "description-extra": "When Amazon Route 53 receives a DNS query for a domain name and type for which you have created latency resource record sets, Amazon Route 53 selects the latency resource record set that has the lowest latency between the end user and the associated Amazon EC2 region. Amazon Route 53 then returns the value that is associated with the selected resource record set.The following restrictions must be followed:To see a list of regions by service, see Regions and Endpoints in the AWS General Reference.",
            "description-extras": [
                "You can only specify one resource record per latency resource record\n                        set.",
                "You can only create one latency resource record set for each Amazon EC2\n                        region.",
                "You are not required to create latency resource record sets for all\n                        Amazon EC2 regions. Amazon Route 53 will choose the region with the best latency from among\n                        the regions for which you create latency resource record sets.",
                "You cannot create both weighted and latency resource record sets that have the same values\n                            for the Name and Type elements."
            ]
        },
        "ResourceRecords": {
            "title": "ResourceRecords",
            "description": "List of resource records to add. Each record should be in the format appropriate for the record type specified by the Type property. For information about different record types and their record formats, see Appendix: Domain Name Format in the Amazon Route 53 Developer Guide.",
            "required": "Conditional. Required if TTL or SetIdentifier is set. Also, if you set ResourceRecords, you must set TTL or SetIdentifier.",
            "required-note": "Note If you are creating an alias resource record set, you should omit ResourceRecords.",
            "type": "A list of strings",
            "update requires": "No interruption"
        },
        "SetIdentifier": {
            "title": "SetIdentifier",
            "description": "A unique identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.",
            "required": "Conditional. Required if you are creating a weighted, latency, failover, or geolocation resource record set. ResourceRecords must also be set.",
            "description-extra": "For more information, see the SetIdentifier element in the Amazon Route 53 Developer Guide.",
            "type": "String",
            "update requires": "No interruption"
        },
        "TTL": {
            "title": "TTL",
            "description": "The resource record cache time to live (TTL), in seconds. If you specify this property, do not specify the AliasTarget property. For alias target records, the alias uses a TTL value from the target.",
            "description-extra": "If TTL is specified, then ResourceRecords is also required.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        },
        "Type": {
            "title": "Type",
            "description": "The type of records to add.",
            "required": "Yes",
            "type": "String",
            "description-extra": "Valid Values: A | AAAA | CNAME | MX | NS | PTR | SOA | SPF | SRV | TXT",
            "update requires": "No interruption"
        },
        "Weight": {
            "title": "Weight",
            "description": "Weighted resource record sets only: Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location.",
            "description-extra": "For more information about weighted resource record sets, see Setting Up Weighted Resource Record Sets in the Amazon Route 53 Developer Guide.",
            "required": "Conditional. Required if you are creating a weighted resource record set.",
            "type": "Number. Weight expects integer values.",
            "update requires": "No interruption"
        }
    },
    "AWS::Route53::RecordSetGroup": {
        "HostedZoneId": {
            "title": "HostedZoneId",
            "description": "The ID of the hosted zone.",
            "required": "Conditional: You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
            "type": "String",
            "update requires": "Replacement"
        },
        "HostedZoneName": {
            "title": "HostedZoneName",
            "description": "The name of the domain for the hosted zone where you want to add the record set.",
            "description-extra": "When you create a stack using an AWS::Route53::RecordSet that specifies HostedZoneName, AWS CloudFormation attempts to find a hosted zone whose name matches the HostedZoneName. If AWS CloudFormation cannot find a hosted zone with a matching domain name, or if there is more than one hosted zone with the specified domain name, AWS CloudFormation will not create the stack.If you have multiple hosted zones with the same domain name, you must explicitly specify the hosted zone using HostedZoneId.",
            "required": "Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
            "type": "String",
            "update requires": "Replacement"
        },
        "RecordSets": {
            "title": "RecordSets",
            "description": "List of resource record sets to add.",
            "required": "Yes",
            "type": "list of AWS::Route53::RecordSet",
            "update requires": "No interruption"
        },
        "Comment": {
            "title": "Comment",
            "description": "Any comments you want to include about the hosted zone.",
            "required": "No",
            "type": "String",
            "update requires": "No interruption"
        }
    },
    "AWS::S3::Bucket": {
        "AccessControl": {
            "title": "AccessControl",
            "description": "A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see Canned ACLs in the Amazon S3 documentation.",
            "required": "No",
            "type": "String",
            "description-extra": "Valid values: Private | PublicRead | PublicReadWrite | AuthenticatedRead | LogDeliveryWrite | BucketOwnerRead | BucketOwnerFullControl",
            "update requires": "No interruption"
        },
        "BucketName": {
            "title": "BucketName",
            "description": "A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name. For more information, see Name Type. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-).",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "String",
            "update requires": "Replacement"
        },
        "CorsConfiguration": {
            "title": "CorsConfiguration",
            "description": "Rules that define cross-origin resource sharing of objects in this bucket. For more information, see Enabling Cross-Origin Resource Sharing in the Amazon Simple Storage Service Developer Guide.",
            "required": "No",
            "type": "Amazon S3 Cors Configuration",
            "update requires": "No interruption"
        },
        "LifecycleConfiguration": {
            "title": "LifecycleConfiguration",
            "description": "Rules that define how Amazon S3 manages objects during their lifetime. For more information, see Object Lifecycle Management in the Amazon Simple Storage Service Developer Guide.",
            "required": "No",
            "type": "Amazon S3 Lifecycle Configuration",
            "update requires": "No interruption"
        },
        "LoggingConfiguration": {
            "title": "LoggingConfiguration",
            "description": "Settings that defines where logs are stored.",
            "required": "No",
            "type": "Amazon S3 Logging Configuration",
            "update requires": "No interruption"
        },
        "NotificationConfiguration": {
            "title": "NotificationConfiguration",
            "description": "Configuration that defines which Amazon SNS topic to send messages to and what events to report.",
            "required": "No",
            "type": "Amazon S3 Notification Configuration",
            "update requires": "No interruption"
        },
        "Tags": {
            "title": "Tags",
            "description": "An arbitrary set of tags (key-value pairs) for this Amazon S3 bucket.",
            "required": "No",
            "type": "AWS CloudFormation Resource Tags",
            "update requires": "No interruption"
        },
        "VersioningConfiguration": {
            "title": "VersioningConfiguration",
            "description": "Enables multiple variants of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.",
            "required": "No",
            "type": "Amazon S3 Versioning Configuration",
            "update requires": "No interruption"
        },
        "WebsiteConfiguration": {
            "title": "WebsiteConfiguration",
            "description": "Information used to configure the bucket as a static website. For more information, see Hosting Websites on Amazon S3.",
            "required": "No",
            "type": "Website Configuration Type",
            "update requires": "No interruption"
        }
    },
    "AWS::S3::BucketPolicy": {
        "Bucket": {
            "title": "Bucket",
            "description": "The Amazon S3 bucket that the policy applies to.",
            "required": "Yes",
            "type": "String",
            "description-extra": "You cannot update this property. If you want to add or remove a bucket from a bucket policy, you must modify your AWS CloudFormation template by creating a new bucket policy resource and removing the old one. Then use the modified template to update your AWS CloudFormation stack."
        },
        "PolicyDocument": {
            "title": "PolicyDocument",
            "description": "A policy document containing permissions to add to the specified bucket.",
            "required": "Yes",
            "type": "JSON object",
            "update requires": "No interruption"
        }
    },
    "AWS::SDB::Domain": {},
    "AWS::SNS::Topic": {
        "DisplayName": {
            "title": "DisplayName",
            "description": "A developer-defined string that can be used to identify this SNS topic.",
            "required": "No",
            "type": "String",
            "update requires": "Updates are not supported."
        },
        "Subscription": {
            "title": "Subscription",
            "description": "The SNS subscriptions (endpoints) for this topic.",
            "required": "No",
            "type": "List of SNS Subscriptions",
            "update requires": "Updates are not supported."
        },
        "TopicName": {
            "title": "TopicName",
            "description": "A name for the topic. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the topic name. For more information, see Name Type.",
            "required": "No",
            "type": "Name Type",
            "update requires": "Updates are not supported."
        }
    },
    "AWS::SNS::TopicPolicy": {
        "PolicyDocument": {
            "title": "PolicyDocument",
            "description": "A policy document that contains permissions to add to the specified SNS topics.",
            "required": "Yes",
            "type": "JSON object",
            "update requires": "No interruption"
        },
        "Topics": {
            "title": "Topics",
            "description": "The Amazon Resource Names (ARN) of the topics to which you want to add the policy. You can use the Ref function to specify an AWS::SNS::Topic resource.",
            "required": "Yes",
            "type": "A list of Amazon SNS topics ARNs",
            "update requires": "No interruption"
        }
    },
    "AWS::SQS::Queue": {
        "DelaySeconds": {
            "title": "DelaySeconds",
            "description": "The time in seconds that the delivery of all messages in the queue will be delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "MaximumMessageSize": {
            "title": "MaximumMessageSize",
            "description": "The limit of how many bytes a message can contain before Amazon SQS rejects it. You can specify an integer value from 1024 bytes (1 KiB) to 262144 bytes (256 KiB). The default value is 262144 (256 KiB).",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "MessageRetentionPeriod": {
            "title": "MessageRetentionPeriod",
            "description": "The number of seconds Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days). The default value is 345600 seconds (4 days).",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "QueueName": {
            "title": "QueueName",
            "description": "A name for the queue. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the queue name. For more information, see Name Type.",
            "description-note": "ImportantIf you specify a name, you cannot do updates that require this resource to be replaced.You can still do updates to this resource if the update requires no or some interruption.",
            "required": "No",
            "type": "Name Type",
            "update requires": "Replacement"
        },
        "ReceiveMessageWaitTimeSeconds": {
            "title": "ReceiveMessageWaitTimeSeconds",
            "description": "Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, as opposed to returning an empty response if a message is not yet available. You can specify an integer from 1 to 20. The short polling is used as the default or when you specify 0 for this property. For more information, see Amazon SQS Long Poll.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        },
        "RedrivePolicy": {
            "title": "RedrivePolicy",
            "description": "Specifies an existing dead letter queue to receive messages after the source queue (this queue) fails to process a message a specified number of times.",
            "required": "No",
            "type": "Amazon SQS RedrivePolicy",
            "update requires": "No interruption"
        },
        "VisibilityTimeout": {
            "title": "VisibilityTimeout",
            "description": "The length of time during which the queue will be unavailable once a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue.",
            "description-extra": "Values must be from 0 to 43200 seconds (12 hours). If no value is specified, the default value of 30 seconds will be used.For more information about SQS Queue visibility timeouts, see Visibility Timeout in the Amazon Simple Queue Service Developer Guide.",
            "required": "No",
            "type": "Integer",
            "update requires": "No interruption"
        }
    },
    "AWS::SQS::QueuePolicy": {
        "PolicyDocument": {
            "title": "PolicyDocument",
            "description": "A policy document containing permissions to add to the specified SQS queues.",
            "required": "Yes",
            "type": "JSON object",
            "update requires": "No interruption"
        },
        "Queues": {
            "title": "Queues",
            "description": "The URLs of the queues to which you want to add the policy. You can use the Ref function to specify an AWS::SQS::Queue resource.",
            "required": "Yes",
            "type": "A list of strings",
            "update requires": "No interruption"
        }
    }
}